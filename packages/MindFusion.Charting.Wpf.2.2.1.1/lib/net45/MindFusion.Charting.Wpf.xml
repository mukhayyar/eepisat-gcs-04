<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MindFusion.Charting.Wpf</name>
    </assembly>
    <members>
        <member name="T:MindFusion.Charting.Wpf.Annotation">
            <summary>
            Represents an anotation at a chart element.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Annotation.Value">
            <summary>
            Gets or sets the value that indicates where to draw this Annotation.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Annotation.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Annotation.Index">
            <summary>
            Gets or sets the index of the chart element where this Annotation is drawn.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Annotation.IndexProperty">
            <summary>
            Identifies the Index dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Annotation.AnnotationType">
            <summary>
            Gets or sets the type of the annotation label.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Annotation.AnnotationTypeProperty">
            <summary>
            Identifies the AnotationType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Annotation.Label">
            <summary>
            Gets or sets the annotation label.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Annotation.LabelProperty">
            <summary>
            Identifies the Label dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Annotation.Fill">
            <summary>
            Gets or sets the fill of the annotation.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Annotation.FillProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Annotation.Stroke">
            <summary>
            Gets or sets the stroke of the annotation.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Annotation.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Annotation.Size">
            <summary>
            Gets or sets the size of the annotation.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Annotation.SizeProperty">
            <summary>
            Identifies the Size dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Annotation.StrokeThickness">
            <summary>
            Gets or sets the thickness of the stroke for the annotation.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Annotation.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.Annotation.AnnotationChanged">
            <summary>
            Occurs when the Annotation has changed.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.AnnotationType">
            <summary>
            Represents types of annotation that are drawn.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AnnotationType.Empty">
            <summary>
            No annotation mark is drawn.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AnnotationType.Point">
            <summary>
            The annotation mark is a point.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AnnotationType.Stick">
            <summary>
            The annotation mark is a stick.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.AxesChart">
            <summary>
            Base class for charts which support the Cartesian coordinate system.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.MousePositionProperty">
            <summary>
            Identifies the MousePosition dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.PlotAreaRectProperty">
            <summary>
            Identifies the PlotAreaRect dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.ShowCrosshairProperty">
            <summary>
            Identifies the ShowCrosshair dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.CrosshairStrokeProperty">
            <summary>
            Identifies the CrosshairStroke dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.CrosshairStrokeThicknessProperty">
            <summary>
            Identifies the CrosshairStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.GridTypeProperty">
            <summary>
            Identifies the GridType dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.GridStrokesProperty">
            <summary>
            Identifies the GridStrokes dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.SecondaryGridStrokesProperty">
            <summary>
            Identifies the SecondaryGridStrokes dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.GridStrokeThicknessProperty">
            <summary>
            Identifies the GridStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.GridFillsProperty">
            <summary>
            Identifies the GridFills dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.SecondaryGridFillsProperty">
            <summary>
            Identifies the SecondaryGridFills dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.XGridLinesProperty">
            <summary>
            Identifies the XGridLines dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.YGridLinesProperty">
            <summary>
            Identifies the YGridLines dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.PlotAreaFillProperty">
            <summary>
            Identifies the PlotAreaFill dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.PlotAreaStrokeProperty">
            <summary>
            Identifies the PlotAreaStroke dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.PlotAreaStrokeThicknessProperty">
            <summary>
            Identifies the PlotAreaStrokeThickness dependency property.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.#ctor">
            <summary>
            Creates an AxesChart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.OnApplyTemplate">
            <summary>
            Control.OnApplyTemplate override.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.CrosshairPosition(MindFusion.Charting.Wpf.AxesSeries,System.Windows.Point)">
            <summary>
            Gets the current location of the crosshair.
            </summary>
            <param name="series">The series.</param>
            <param name="mousePos">The position of the mouse.</param>
            <returns>The location of the crosshair measured in the Cartesian coordinate system.</returns> 
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.CalculateAutoScaleCoords(MindFusion.Charting.Wpf.AxisType,MindFusion.Charting.Wpf.Axis,System.Int32)">
            <summary>
            Calculates the intervals at the axis
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.CalculateInterval(System.Collections.Generic.List{System.Double},System.Double,System.Double@,System.Double@,MindFusion.Charting.Wpf.AxisType,MindFusion.Charting.Wpf.Axis)">
            <summary>
            Calculates the numerical axis intervals so that all given
            numbers could fit in.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raised when the left mouse button is pressed 
            while the pointer is over this control.
            </summary>
            <param name="e">An instance of the MouseButtonEventArgs class 
            that provides data for the event.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Raised when the mouse pointer moves while the mouse 
            pointer is over the chart control. 
            </summary>
            <param name="e">An instance of the MouseEventArgs class 
            that provides data for the event.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raised when the left mouse button is released while the mouse pointer is 
            over the chart.
            </summary>
            <param name="e">An instance of the MouseButtonEventArgs class 
            that provides data for the event.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Raised when the mouse eneters the control.
            </summary>
            <param name="e">An instance of the MouseEventArgs class 
            that provides data for the event.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            /Raised when the mouse leaves the chart area.
            </summary>
            <param name="e">An instance of the MouseEventArgs class 
            that provides data for the event.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.Zoom(System.Windows.Point,System.Windows.Point)">
            <summary>
            Zooms into the specified range of the chart graphics.
            </summary>
            <param name="selectionStart">The start of the range to zoom into.</param>
            <param name="selectionEnd">The end of the range to zoom into.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.ZoomOut">
            <summary>
            Zooms out the chart one step back.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.ResetZoom">
            <summary>
            Resets the zoom of the chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.CreateImage">
            <summary>
            Converts the chart object into a Bitmap.
            </summary>
            <returns>A RenderTargetBitmap that represents the current chart.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.ExportImage(System.Windows.Media.Imaging.RenderTargetBitmap,System.Int32)">
            <summary>
            Exports a RenderTargetBitmap to a png file.
            </summary>
            <param name="rtb">The RenderTargetBitmap to export.</param>
            <param name="testNumber">The extension of the name for the exported image.</param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.MousePosition">
            <summary>
            Gets or sets the position of the mouse.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.ShowCrosshair">
            <summary>
            Gets or sets whether the crosshair is visible.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.CrosshairStroke">
            <summary>
            Gets or sets the stroke for the crosshair.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.CrosshairStrokeThickness">
            <summary>
            Gets or sets the thickness of the stroke for the crosshair.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.CrosshairBackground">
            <summary>
            Gets or sets the background brush of the crosshair.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.CrosshairBackgroundProperty">
            <summary>
            Identifies the CrosshairBackground dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.XAxes">
            <summary>
            Gets setttings for all X axes of the chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.XAxesProperty">
            <summary>
            Identifies the XAxes dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.YAxes">
            <summary>
            Gets setttings for all Y axes of the chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.YAxesProperty">
            <summary>
            Identifies the YAxes dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.Y2Axes">
            <summary>
            Gets setttings for all Y2 axes of the chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.Y2AxesProperty">
            <summary>
            Identifies the Y2Axes dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.X2Axes">
            <summary>
            Gets setttings for all X2 axes of the chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.X2AxesProperty">
            <summary>
            Identifies the X2Axes dependency property.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.OnAxesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when the axes has changed.
            </summary>
            <param name="d">The axis that raised the event.</param>
            <param name="e">An object with event data.</param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.PlotAreaRect">
            <summary>
            Gets or sets the plot area rectangle. Used internally.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.GridType">
            <summary>
            Gets or sets the grid type.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.GridStrokes">
            <summary>
            Gets or sets the brushes for the grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.SecondaryGridStrokes">
            <summary>
            Gets or sets the secondary brushes for the grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.GridStrokeThickness">
            <summary>
            Gets or sets the thickness of grid lines.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.GridFills">
            <summary>
            Gets or sets the brushes for the grid stripes.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.SecondaryGridFills">
            <summary>
            Gets or sets the secondary brushes for the grid stripes.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.XGridLines">
            <summary>
            Gets or sets the points for the vertical grid lines
            when the GridType is GridType.Custom
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.YGridLines">
            <summary>
            Gets or sets the points for the horizontal grid lines
            when the GridType is GridType.Custom
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.PlotAreaFill">
            <summary>
            Gets or sets the background of the plot area.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.PlotAreaStroke">
            <summary>
            Gets or sets the outline of the plot area.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.PlotAreaStrokeThickness">
            <summary>
            Gets or sets the thickness of the outline of the plot area.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.ClipToPlotArea">
            <summary>
            Clip all data in bounds of the plot area.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.ClipToPlotAreaProperty">
            <summary>
            Identifies the GridType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.BarType">
            <summary>
            Gets or sets the type of bars for all bar series.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.BarTypeProperty">
            <summary>
            Identifies the BarType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.LineType">
            <summary>
            Gets or sets the type of lines for all line series.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.LineTypeProperty">
            <summary>
            Identifies the LineType dependency property.
            </summary>       
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.CrosshairTemplate">
            <summary>
            Gets or sets the crosshair template.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.CrosshairTemplateProperty">
            <summary>
            Identifies the CrosshairTemplate dependency property.
            </summary>     
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.CrosshairType">
            <summary>
            Gets or sets the type of crosshair.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.CrosshairTypeProperty">
            <summary>
            Identifies the CrosshairType dependency property.
            </summary>     
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.MinZoomSpan">
            <summary>
            Gets or sets the area of zoom.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart.MinZoomSpanProperty">
            <summary>
            Identifies the MinZoomSpan dependency property.
            </summary>    
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.Behavior">
            <summary>
            Gets or sets the behavor of the chart control.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart.PointAreaRadius">
            <summary>
            Gets or sets the radius of the area that, if clicked, 
            will be considered for a click at the chart point, which is
            its center.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart.OnCrosshairPositionChanged(MindFusion.Charting.Wpf.CrosshairPositionChangedArgs)">
            <summary>
            Raises the CrosshairPositionChanged event.
            </summary>
            <param name="eventArgs">CrosshairPositionChangedArgs object with data for the event.</param>
        </member>
        <member name="E:MindFusion.Charting.Wpf.AxesChart.ZoomChanged">
            <summary>
            Raised when zooming into a data range.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.AxesChart.CrosshairPositionChanged">
            <summary>
            Raised when the crosshair moves.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.AxesChart3D">
            <summary>
            Base class for 3D charts which support the Cartesian coordinate system.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart3D.#ctor">
            <summary>
            Creates a new AxesChart3D.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart3D.OnApplyTemplate">
            <summary>
            Chart3D.OnApplyTemplate override.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesChart3D.HitTest(System.Windows.Point)">
            <summary>
            Chart3D.HitTest override.
            </summary>
            <param name="p">The point to test.</param>
            <returns>An instance of the ChartHitTestResult3D class.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.XAxisSettings">
            <summary>
            Gets the settings for the X-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.XAxisSettingsProperty">
            <summary>
            Identifies the XAxisSettings dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.X2AxisSettings">
            <summary>
            Gets the settings for the secondary X-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.X2AxisSettingsProperty">
            <summary>
            Identifies the X2AxisSettings dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.YAxisSettings">
            <summary>
            Gets the settings for the Y-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.YAxisSettingsProperty">
            <summary>
            Identifies the YAxisSettings dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.Y2AxisSettings">
            <summary>
            Gets the settings for the secondary Y-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.Y2AxisSettingsProperty">
            <summary>
            Identifies the Y2AxisSettings dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.ZAxisSettings">
            <summary>
            Gets the settings for the Z-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.ZAxisSettingsProperty">
            <summary>
            Identifies the ZAxisSettings dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.Z2AxisSettings">
            <summary>
            Gets the settings for the secondary Z-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.Z2AxisSettingsProperty">
            <summary>
            Identifies the Z2AxisSettings dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.GridType">
            <summary>
            Gets or sets the grid type.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.GridTypeProperty">
            <summary>
            Identifies the GridType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.GridFills">
            <summary>
            Gets or sets the brushes for the grid stripes.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.GridFillsProperty">
            <summary>
            Identifies the GridFills dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.GridStrokes">
            <summary>
            Gets or sets the brushes for the grid lines.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.GridStrokesProperty">
            <summary>
            Identifies the GridStrokes dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.GridStrokeThickness">
            <summary>
            Gets or sets the thickness of grid lines.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.GridStrokeThicknessProperty">
            <summary>
            Identifies the GridStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.SideWallThickness">
            <summary>
            Gets or sets the thickness of the side walls.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.SideWallThicknessProperty">
            <summary>
            Identifies the SideWallThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.XLabels">
            <summary>
            Gets or sets the custom labels for the X-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.XLabelsProperty">
            <summary>
            Identifies the XLabels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.XLabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving X-labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.XLabelPathProperty">
            <summary>
            Identifies the XLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.YLabels">
            <summary>
            Gets or sets the custom labels for the Y-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.YLabelsProperty">
            <summary>
            Identifies the YLabels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.YLabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving Y-labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.YLabelPathProperty">
            <summary>
            Identifies the YLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.Y2Labels">
            <summary>
            Gets or sets the custom labels for the Y2-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.Y2LabelsProperty">
            <summary>
            Identifies the Y2Labels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.Y2LabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving Y2-labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.Y2LabelPathProperty">
            <summary>
            Identifies the Y2LabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.X2Labels">
            <summary>
            Gets or sets the custom labels for the X2-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.X2LabelsProperty">
            <summary>
            Identifies the X2Labels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.X2LabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving X2-labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.X2LabelPathProperty">
            <summary>
            Identifies the X2LabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.ZLabels">
            <summary>
            Gets or sets the custom labels for the Z-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.ZLabelsProperty">
            <summary>
            Identifies the ZLabels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.ZLabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving Z-labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.ZLabelPathProperty">
            <summary>
            Identifies the ZLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.Z2Labels">
            <summary>
            Gets or sets the custom labels for the Z2-axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.Z2LabelsProperty">
            <summary>
            Identifies the Z2Labels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesChart3D.Z2LabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving Z2-labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesChart3D.Z2LabelPathProperty">
            <summary>
            Identifies the Z2LabelPath dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.AxesSeries">
            <summary>
            Base class for series of charts that support the Cartesian coordinate system.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesSeries.#ctor(MindFusion.Charting.Wpf.Axis,MindFusion.Charting.Wpf.Axis)">
            <summary>
            Initializes a new instance of the AxesSeries class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesSeries.#ctor">
            <summary>
            Initializes a new instance of the AxesSeries class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries.MinCountOfDataPairs">
            <summary>
            Gets the count of data pairs in this series 
            based on the type of data used.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries.XData">
            <summary>
            Gets or sets the data used for calculating the X-coordinates of data points.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesSeries.XDataProperty">
            <summary>
            Identifies the XData dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries.YData">
            <summary>
            Gets or sets the data used for calculating the Y-coordinates of data points.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesSeries.YDataProperty">
            <summary>
            Identifies the YData dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries.XDataPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving the X-data for this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesSeries.XDataPathProperty">
            <summary>
            Identifies the XDataPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries.YDataPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving the Y-data for this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesSeries.YDataPathProperty">
            <summary>
            Identifies the YDataPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries.XAxis">
            <summary>
            
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesSeries.XAxisProperty">
            <summary>
            Identifies the XAxis dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries.YAxis">
            <summary>
            
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesSeries.YAxisProperty">
            <summary>
            Identifies the YAxis dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.AxesSeries3D">
            <summary>
            Represents a series in a AxesChart3D chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesSeries3D.#ctor(MindFusion.Charting.Wpf.Axis,MindFusion.Charting.Wpf.Axis)">
            <summary>
            Initializes a new instance of the AxesSeries3D class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.AxesSeries3D.#ctor">
            <summary>
            Initializes a new instance of the AxesSeries3D class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries3D.ZData">
            <summary>
            Gets or sets the data used for calculating the Z-coordinates of data points.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesSeries3D.ZDataProperty">
            <summary>
            Identifies the ZData dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries3D.Z2Data">
            <summary>
            Gets or sets the data used for calculating the Z2-coordinates of data points.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesSeries3D.Z2DataProperty">
            <summary>
            Identifies the Z2Data dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries3D.ZDataPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving the Z-data for this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesSeries3D.ZDataPathProperty">
            <summary>
            Identifies the ZDataPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.AxesSeries3D.Z2DataPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving the Z2-data for this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxesSeries3D.Z2DataPathProperty">
            <summary>
            Identifies the Z2DataPath dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Bar">
            <summary>
            Represents a bar in charts that show bars.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Bar.CreateShape">
            <summary>
            Creates a Shape that represents this bar.
            </summary>
            <returns>A Shape object.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bar.Width">
            <summary>
            Gets the width of the bar.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bar.Height">
            <summary>
            Gets the height of the bar.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bar.Progress">
            <summary>
            Gets the progress of the bar.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bar.Value">
            <summary>
            Gets the value of the bar.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bar.SeriesIndex">
            <summary>
            Gets the index of the series this bar belongs to.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bar.BarIndex">
            <summary>
            Gets the index of the bar in the series.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BarChart3D">
            <summary>
            Represents a 3D bar chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BarChart3D.#ctor">
            <summary>
            Creates a new BarChart3D.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BarChart3D.HitTest(System.Windows.Point)">
            <summary>
            AxesChart3D.HitTest override.
            </summary>
            <param name="p">The point to test.</param>
            <returns>An instance of the ChartHitTestResult3D class.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BarChart3D.OnApplyTemplate">
            <summary>
            AxesChart3D.OnApplyTemplate override.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.ZAxisSettings">
            <summary>
            Gets the settings for the Z-axis.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.Z2AxisSettings">
            <summary>
            Gets the settings for the secondary Z-axis.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.ZLabels">
            <summary>
            Gets or sets the custom labels for the Z-axis.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.Z2Labels">
            <summary>
            Gets or sets the custom labels for the Z2-axis.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.BarType3D">
            <summary>
            Gets or sets the type of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarChart3D.BarType3DProperty">
            <summary>
            Identifies the BarType3D dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.SeriesWidth">
            <summary>
            Gets or sets the size of the series in the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarChart3D.SeriesWidthProperty">
            <summary>
            Identifies the SeriesWidth dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.ModelOffset">
            <summary>
            Gets or sets the offset of the model in the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarChart3D.ModelOffsetProperty">
            <summary>
            Identifies the ModelOffset dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.RoundCornerType">
            <summary>
            Gets or sets which edges of the bar are drawn with rounded corners.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarChart3D.RoundCornerTypeProperty">
            <summary>
            Identifies the RoundCornerType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.CornerRadius3D">
            <summary>
            Gets or sets the corner radius of the bars.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarChart3D.CornerRadius3DProperty">
            <summary>
            Identifies the CornerRadius3D dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.BarModel3D">
            <summary>
            Gets or sets the model of the bars.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarChart3D.BarModel3DProperty">
            <summary>
            Identifies the BarModel3D dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.GroundLevelY">
            <summary>
            Gets or sets the value that indicates the level of the groundY in the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarChart3D.GroundLevelYProperty">
            <summary>
            Identifies the GroundLevelY dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.GroundLevelX">
            <summary>
            Gets or sets the value that indicates the level of the groundX in the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarChart3D.GroundLevelXProperty">
            <summary>
            Identifies the GroundLevelX dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart3D.AllowGroundLevelSelection">
            <summary>
            Gets or sets whether the ground-level plane can be selected.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarChart3D.AllowGroundLevelSelectionProperty">
            <summary>
            Identifies the AllowGroundLevelSelection dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BarModel3D">
            <summary>
            Specifies what models are used to represent bars in 3D barcharts.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarModel3D.Bar">
            <summary>
            Draw bars as rectangular cuboids.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarModel3D.Cylinder">
            <summary>
            Draw bars as cylinders.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BarType3D">
            <summary>
            Specifies the types of bar charts supported by the control.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType3D.Vertical">
            <summary>
            Bars are drawn vertical.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType3D.Horizontal">
            <summary>
            Bars are drawn horizontal.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType3D.VerticalStack">
            <summary>
            Bars are drawn in a vertical stack.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType3D.HorizontalStack">
            <summary>
            Bars are drawn in a horizontal stack.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType3D.VerticalInColumn">
            <summary>
            Bars are drawn vertical and bars from each series are drawn inside the respective bar from the previous series.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType3D.HorizontalInColumn">
            <summary>
            Bars are drawn horizontal and bars from each series are drawn inside the respective bar from the previous series.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Behavior3D">
            <summary>
            Specifies how 3D charts react to mouse input.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Behavior3D.DoNothing">
            <summary>
            Indicates that the mouse input has no effect.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Behavior3D.ChangePerspective">
            <summary>
            Indicates that the mouse input adjust the camera location and direction.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Behavior3D.ChangeValue">
            <summary>
            Indicates that mouse clicks adjust the displayed data, by adding,
            decreasing or increasing values depending on the clicked mouse button
            and the chart type.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BehaviorBase.OnMouseDown(System.Windows.Point,System.Windows.Input.MouseButton)">
            <summary>
            Invoked when the mouse button is pressed.
            </summary>
            <param name="mousePosition">A Point instance that specifies the mouse pointer position.</param>
            <param name="mouseButton">A member of the MouseButton enumeration.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BehaviorBase.OnMouseMove(System.Windows.Point)">
            <summary>
            Invoked when the mouse moves.
            </summary>
            <param name="mousePosition">A Point instance that specifies the mouse pointer position.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BehaviorBase.OnMouseUp(System.Windows.Point,System.Windows.Input.MouseButton)">
            <summary>
            Invoked when the mouse button is released.
            </summary>
            <param name="mousePosition">A Point instance that specifies the mouse pointer position.</param>
            <param name="mouseButton">A member of the MouseButtons enumeration.</param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BehaviorBase.Chart">
            <summary>
            Gets a reference to the Chart instance this behavior is associated with.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Bubble">
            <summary>
            Represents a bubble in bubble charts.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Bubble.CreateShape">
            <summary>
            Creates a Shape that represents the bubble element.
            </summary>
            <returns>A Shape object.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bubble.Point">
            <summary>
            Gets a point representing the physical location of this bubble within the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bubble.SeriesIndex">
            <summary>
            Gets the index of the series represented by this bubble.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bubble.DataPoint">
            <summary>
            Gets a point representing the data associated with this bubble.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bubble.Diameter">
            <summary>
            Gets the size of this bubble.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bubble.XDataIndex">
            <summary>
            Gets the 0-based index of the XData element associated with this bubble.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Bubble.YDataIndex">
            <summary>
            Gets the 0-based index of the YData element associated with this bubble.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BubbleChart">
            <summary>
            Represents a bubble chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BubbleChart.#ctor">
            <summary>
            Initializes a new instance of the BubbleChart class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BubbleChart.OnApplyTemplate">
            <summary>
            Chart.OnApplyTemplate override.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BubbleChart.MinBubbleSize">
            <summary>
            Gets or sets the radius length of the smallest bubble.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleChart.MinBubbleSizeProperty">
            <summary>
            Identifies the MinBubbleSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BubbleChart.MaxBubbleSize">
            <summary>
            Gets or sets the radius length of the biggest bubble.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleChart.MaxBubbleSizeProperty">
            <summary>
            Identifies the MaxBubbleSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BubbleChart.BubbleScaleType">
            <summary>
            Gets or sets a value specifying the algorithm to use when
            calculating the size of the bubbles in the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleChart.BubbleScaleTypeProperty">
            <summary>
            Identifies the BubbleScaleType dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BubbleLabelType">
            <summary>
            Specifies the types of labels that can be drawn at the bubbles in a bubble chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleLabelType.Size">
            <summary>
            The labels are the numbers from the chart data.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleLabelType.Location">
            <summary>
            The labels are the location of the chart data.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleLabelType.CustomText">
            <summary>
            The labels are set by the user.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleLabelType.Empty">
            <summary>
            No labels are drawn.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BubbleScaleType">
            <summary>
            Specifies an algorithm for calculating the sizes of the bubbles in a
            bubble chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleScaleType.Linear">
            <summary>
            Indicates a linear scaling of bubble sizes.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleScaleType.Area">
            <summary>
            Indicates a quadratic scaling of bubble sizes.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BubbleSeries">
            <summary>
            Represents a series in a bubble chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BubbleSeries.#ctor(MindFusion.Charting.Wpf.Axis,MindFusion.Charting.Wpf.Axis)">
            <summary>
            Initializes a new instance of the BubbleSeries class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BubbleSeries.#ctor">
            <summary>
            Initializes a new instance of the BubbleSeries class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BubbleSeries.Labels">
            <summary>
            Gets or sets the labels drawn at data points.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleSeries.LabelsProperty">
            <summary>
            Identifies the Labels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BubbleSeries.LabelType">
            <summary>
            Gets or sets the type of labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleSeries.LabelTypeProperty">
            <summary>
            Identifies the LabelType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BubbleSeries.LabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving custom labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleSeries.LabelPathProperty">
            <summary>
            Identifies the LabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BubbleSeries.LabelPosition">
            <summary>
            Gets or sets a value indicating the vertical alignment of the labels
            relatively to their associated bubbles. This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleSeries.LabelPositionProperty">
            <summary>
            Identifies the LabelPosition dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BubbleSeries.SizeData">
            <summary>
            Gets or sets a list of values to use as the relative sizes of the bubbles in the series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BubbleSeries.SizeDataProperty">
            <summary>
            Identifies the SizeData dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CameraType">
            <summary>
            Defines types of camera that can be used in a 3D chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CameraType.Perspective">
            <summary>
            Defines a perspective projection camera.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CameraType.Orthographic">
            <summary>
            Defines an orthographic projection camera.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Candlestick">
            <summary>
            Represents a candlestick shape in financial charts.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Candlestick.#ctor">
            <summary>
            Initializes a new instance of the Candlestick chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Candlestick.CreateShape">
            <summary>
            Creates a Shape that represents this bar.
            </summary>
            <returns>A Shape object.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Candlestick.Width">
            <summary>
            Gets the width of the candlestick.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Candlestick.Height">
            <summary>
            Gets the height of the candlestick.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Candlestick.SeriesIndex">
            <summary>
            Gets the index of the series this candlestick belongs to.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Candlestick.BarIndex">
            <summary>
            Gets the index of the bar in the series.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Candlestick.Position">
            <summary>
            Gets or sets the horizontal position of the candlestick.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CandlestickSeries">
            <summary>
            Represents a data series rendered as candlestick chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CandlestickSeries.#ctor(MindFusion.Charting.Wpf.Axis,MindFusion.Charting.Wpf.Axis)">
            <summary>
            Creates a new instance of the CandlestickSeries class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CandlestickSeries.#ctor">
            <summary>
            Initializes a new instance of the CandlestickSeries class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.Values">
            <summary>
            Gets or sets the price values associated with this series.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.ValuesProperty">
            <summary>
            Identifies the Values dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.CandleWidth">
            <summary>
            Gets or sets the body width of candlesticks.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.CandleWidthProperty">
            <summary>
            Identifies the CandleWidth dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.TopLabels">
            <summary>
            Gets or sets the labels displayed above candlesticks. This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.TopLabelsProperty">
            <summary>
            Identifies the TopLabels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.TopLabelType">
            <summary>
            Gets or sets the type of the top labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.TopLabelTypeProperty">
            <summary>
            Identifies the TopLabelType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.TopLabelOffset">
            <summary>
            Gets or sets the offset of the top label from the edge of the bar.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.TopLabelOffsetProperty">
            <summary>
            Identifies the TopLabelOffset dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.InnerLabels">
            <summary>
            Gets or sets the labels displayed inside candlestick bodies. This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.InnerLabelsProperty">
            <summary>
            Identifies the InnerLabels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.InnerLabelType">
            <summary>
            Gets or sets the type of the inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.InnerLabelTypeProperty">
            <summary>
            Identifies the InnerLabelType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.TopLabelPath">
            <summary>
            Gets or sets the path used for retrieving top label values from the DataSource.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.TopLabelPathProperty">
            <summary>
            Identifies the TopLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.InnerLabelPath">
            <summary>
            Gets or sets the path used for retrieving inner label values from the DataSource.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.InnerLabelPathProperty">
            <summary>
            Identifies the InnerLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.TopLabelFormat">
            <summary>
            Gets or sets a string specifying how price values are formatted when shown as top labels.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.TopLabelFormatProperty">
            <summary>
            Identifies the TopLabelFormat dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.InnerLabelFormat">
            <summary>
            Gets or sets a string specifying how price values are formatted when shown as inner labels.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.InnerLabelFormatProperty">
            <summary>
            Identifies the InnerLabelFormat dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.DateFormat">
            <summary>
            Gets or sets the format of date labels.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.DateFormatProperty">
            <summary>
            Identifies the DateFormat dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.FallingPriceBrush">
            <summary>
            Gets or sets the Brush used to fill candlesticks representing falling prices.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.FallingPriceBrushProperty">
            <summary>
            Identifies the FallingPriceBrush dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CandlestickSeries.RisingPriceBrush">
            <summary>
            Gets or sets the Brush used to fill candlesticks representing rising prices.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CandlestickSeries.RisingPriceBrushProperty">
            <summary>
            Identifies the RisingPriceBrush dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Chart3D">
            <summary>
            Base class for all 3D charts.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart3D.#ctor">
            <summary>
            Initializes a new instance of the Chart3D class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.TrialVisibility">
            <summary>
            Gets the visibility of the trial label.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart3D.OnApplyTemplate">
            <summary>
            FrameworkElement.ApplyTemplate override.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart3D.HitTest(System.Windows.Point)">
            <summary>
            Performs a hit-testing with the specified point and returns a
            ChartHitTestResult3D object that describes the result of the hit-test operation.
            </summary>
            <param name="p">The point to test.</param>
            <returns>An instance of the ChartHitTestResult3D class.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart3D.BeginInit">
            <summary>
            Control.BeginInit() override.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart3D.EndInit">
            <summary>
            Control.EndInit() override.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart3D.UpdateChart">
            <summary>
            Recalculates and redraws the chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart3D.ClearMeshSelection">
            <summary>
            Clear any mesh selection.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.Series">
            <summary>
            Gets the list with the series in the chart.
            </summary>      
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.Legends">
            <summary>
            Gets or sets a list with the chart legends.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.CornerRadius">
            <summary>
            Gets or sets the corner radius of the chart control's bounding rectangle.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.Title">
            <summary>
            Gets or sets the title of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.TitleVisibility">
            <summary>
            Gets or sets the visibility of the chart's title.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.TitleVisibilityProperty">
            <summary>
            Identifies the TitleVisibility dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.TitleMargin">
            <summary>
            Gets or sets the margin around the title.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.TitleMarginProperty">
            <summary>
            Identifies the TitleMargin dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.TitleFontFamily">
            <summary>
            Gets or sets the font family for the title.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.TitleFontFamilyProperty">
            <summary>
            Identifies the TitleFontFamily dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.TitleFontSize">
            <summary>
            Gets or sets the font size for the title.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.TitleFontSizeProperty">
            <summary>
            Identifies the TitleFontSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.TitleFontStyle">
            <summary>
            Gets or sets the font style for the title.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.TitleFontStyleProperty">
            <summary>
            Identifies the TitleFontStyle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.TitleFontWeight">
            <summary>
            Gets or sets the font weight for the title.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.TitleFontWeightProperty">
            <summary>
            Identifies the TitleFontWeight dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.PlotAreaMargin">
            <summary>
            Gets or sets the margin around the plot area.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.PlotAreaMarginProperty">
            <summary>
            Identifies the PlotAreaMargin dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.DataSource">
            <summary>
            Gets or sets the data source. This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.DataSourceProperty">
            <summary>
            Identifies the DataSource dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.Lights">
            <summary>
            Gets or sets the lights in the chart model.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.LightsProperty">
            <summary>
            Identifies the Lights dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.StaticLights">
            <summary>
            Gets or sets the static lights in the chart model.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.StaticLightsProperty">
            <summary>
            Identifies the StaticLights dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.AllowCameraInteraction">
            <summary>
            Gets or sets a value indicating whether the position of the camera changes
            when the users clicks at the chart and drags with the mouse.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.AllowCameraInteractionProperty">
            <summary>
            Identifies the AllowCameraInteraction dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.RotationAxis">
            <summary>
            Gets or sets the axis of rotation of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.RotationAxisProperty">
            <summary>
            Identifies the RotationAxis dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.RotationAngle">
            <summary>
            Gets or sets the angle of rotation for the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.RotationAngleProperty">
            <summary>
            Identifies the RotationAngle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.Scale">
            <summary>
            Gets or sets the scale factor of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.ScaleProperty">
            <summary>
            Identifies the Scale dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.CameraType">
            <summary>
            Gets or sets the type of the camera.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.CameraTypeProperty">
            <summary>
            Identifies the CameraType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.ModelWidth">
            <summary>
            Gets or sets the width of the 3D model that holds the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.ModelWidthProperty">
            <summary>
            Identifies the ModelWidth dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.ModelHeight">
            <summary>
            Gets or sets the height of the 3D model that holds the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.ModelHeightProperty">
            <summary>
            Identifies the ModelHeight dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.ModelDepth">
            <summary>
            Gets or sets the depth of the 3D model that holds the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.ModelDepthProperty">
            <summary>
            Identifies the ModelDepth dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.MeshFaceSize">
            <summary>
            Gets or sets the size of the faces that build the mesh of the 3D chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.MeshFaceSizeProperty">
            <summary>
            Identifies the MeshFaceSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.RenderBackSides">
            <summary>
            Gets or sets a value indicating whether the back sides
            of the chart and the wire frame, if present, are rendered.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.RenderBackSidesProperty">
            <summary>
            Identifies the RenderBackSides dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.Behavior">
            <summary>
            Gets or sets a value indicating how the chart control responds to actions with the mouse.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.BehaviorProperty">
            <summary>
            Identifies the Behavior dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.AllowMeshSelection">
            <summary>
            Gets or sets a value indicating whether the individual mesh objects
            in the chart model can be selected with the mouse.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.AllowMeshSelectionProperty">
            <summary>
            Identifies the AllowMeshSelection dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.MeshSelectionBrush">
            <summary>
            Gets or sets the brush used to highlight selected objects in the chart model.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.MeshSelectionBrushProperty">
            <summary>
            Identifies the MeshSelectionBrush dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.Effect3D">
            <summary>
            Gets or sets the 3D effect of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart3D.Effect3DProperty">
            <summary>
            Identifies the Effect3D dependency property.
            </summary>  
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart3D.ChartTheme">
            <summary>
            Gets or sets a ChartTheme that defines the appearance of chart elements.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ChartEffect">
            <summary>
            Specifies an effect that can be applied to the elements of a chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartEffect.None">
            <summary>
            Indicates that no effect is applied.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartEffect.Glass">
            <summary>
            Indicates a glass-like effect.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ChartEffect3D">
            <summary>
            Specifies a 3D effect in a surface chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartEffect3D.None">
            <summary>
            Indicates no effect.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartEffect3D.ShaderEffect">
            <summary>
            Indicates that a shader effect is applied to the model mesh.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ChartHitTestResult3D">
            <summary>
            Contains the result of hit-testing operations in 3D charts.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartHitTestResult3D.#ctor">
            <summary>
            Initializes a new instance of the ChartHitTestResult3D class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartHitTestResult3D.MeshPoint">
            <summary>
            Gets or sets the physical point from the model mesh, corresponding
            to the hit-tested point. If more than one point of the model mesh is
            at the hit-tested location, the closest point is returned.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartHitTestResult3D.DataPoint">
            <summary>
            Gets or sets the logical value corresponding to the hit-tested point
            in the model mesh.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartHitTestResult3D.ChartElements">
            <summary>
            Gets a list with the hit-tested chart elements.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartHitTestResult3D.ClosestPeak">
            <summary>
            Gets a point representing the surface chart peak,
            which is closest to the hit-tested point.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartHitTestResult3D.Series">
            <summary>
            Gets the chart series related to the hit-tested element.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ChartLegend">
            <summary>
            Describes a legend where each item gives info about a ChartSeries. 
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartLegend.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            ItemsControl.IsItemItsOwnContainerOverride override.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartLegend.Series">
            <summary>
            Gets or sets the series for the legend.
            This is a dependency property.
            </summary>   
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartLegend.SeriesProperty">
            <summary>
            Identifies the Series dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ChartTheme">
            <summary>
            Represents a styling theme for the chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartTheme.#ctor">
            <summary>
            Initializes a new instance of the ChartTheme class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartTheme.#ctor(MindFusion.Charting.Wpf.Chart)">
            <summary>
            Initializes a new ChartTheme for the specified chart.
            </summary>
            <param name="chart">The chart this ChartTheme will be applied at.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartTheme.BasedOn(MindFusion.Charting.Wpf.Chart)">
            <summary>
            Specifies the chart that will be used as a template for this ChartTheme.
            </summary>
            <param name="chart">The chart to use as a theme.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartTheme.Apply(MindFusion.Charting.Wpf.Chart)">
            <summary>
            Applies the current ChartTheme to the specified chart.
            </summary>
            <param name="chart">The Chart to apply the current ChartTheme to.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartTheme.Apply(MindFusion.Charting.Wpf.Chart3D)">
            <summary>
            Applies the current ChartTheme to the specified chart.
            </summary>
            <param name="chart">The Chart3D to apply the current ChartTheme to.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartTheme.SaveToXml(System.String)">
            <summary>
            Saves this ChartTheme under the specified file name.
            </summary>
            <param name="fileName">The name of the file where this ChartTheme will be saved.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartTheme.SaveToXml(System.Xml.XmlNode)">
            <summary>
            Saves the current theme under the specified XML node.
            </summary>
            <param name="node">The XmlNode that will be parent element for the current theme.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartTheme.LoadFromXml(System.String)">
            <summary>
            Loads the current theme from the XML file with the specified name. 
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartTheme.LoadFromXml(System.Xml.XmlNode)">
            <summary>
            Loads the current ChartTheme from the specified XML node.
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartTheme.ThemeStyle">
            <summary>
            Gets or sets the style of this theme.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartTheme.SeriesStyles">
            <summary>
            Gets or sets the styles of the series.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartTheme.AxisStyles">
            <summary>
            Gets or sets the styles of the axis.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Converter">
            <summary>
            Provides capabilities to convert various types to and from strings
            in a culture-independent way.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToBoolean(System.String)">
            <summary>
            Converts the specified string value to bool.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A boolean value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromBoolean(System.Boolean)">
            <summary>
            Converts the specified bool value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToDecimal(System.String)">
            <summary>
            Converts the specified string value to decimal.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A decimal value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromDecimal(System.Decimal)">
            <summary>
            Converts the specified decimal to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToSingle(System.String)">
            <summary>
            Converts the specified string value to float.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A float value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromSingle(System.Single)">
            <summary>
            Converts the specified float value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromSingle(System.Double)">
            <summary>
            Converts the specified double value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToDouble(System.String)">
            <summary>
            Converts the specified string value to double.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A double value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromDouble(System.Double)">
            <summary>
            Converts the specified double value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToByte(System.String)">
            <summary>
            Converts the specified string value to byte value.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A byte value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromByte(System.Byte)">
            <summary>
            Converts the specified byte value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToSByte(System.String)">
            <summary>
            Converts the specified string value to 8-bit signed integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            An 8-bit signed integer value that is deserialized from the
            specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromSByte(System.SByte)">
            <summary>
            Converts the specified 8-bit signed integer to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>    
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToUint16(System.String)">
            <summary>
            Converts the specified string value to unsigned 16-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            An unsigned 16-bit integer value that is deserialized from
            the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromUInt16(System.UInt16)">
            <summary>
            Converts the specified unsigned 16-bit integer value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToUint32(System.String)">
            <summary>
            Converts the specified string value to unsigned 32-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            An unsigned 32-bit integer value that is deserialized from
            the specified string.
            </returns>    
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromUInt32(System.UInt32)">
            <summary>
            Converts the specified unsigned 32-bit integer value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToUint64(System.String)">
            <summary>
            Converts the specified string value to unsigned 64-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <remarks>
            An unsigned 64-bit integer value that is deserialized from
            the specified string.
            </remarks>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromUInt64(System.UInt64)">
            <summary>
            Converts the specified unsigned 64-bit integer value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>    
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToChar(System.String)">
            <summary>
            Converts the specified string value to char.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A char value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromChar(System.Char)">
            <summary>
            Converts the specified char value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToInt16(System.String)">
            <summary>
            Converts the specified string value to 16-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A 16-bit integer value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromInt16(System.Int16)">
            <summary>
            Converts the specified 16-bit integer value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToInt32(System.String)">
            <summary>
            Converts the specified string value to 32-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A 32-bit integer value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToInt32(System.String,System.Int32)">
            <summary>
            Converts the specified string value to 32-bit integer without throwing
            exceptions. In case the specified string cannot be converted, the
            specified default value is returned.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <param name="defaultValue">
            The default value to return if s cannot be deserialized.
            </param>
            <returns>
            A 32-bit integer value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromInt32(System.Int32)">
            <summary>
            Converts the specified 32-bit integer value to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToInt64(System.String)">
            <summary>
            Converts the specified string value to 64-bit integer.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A 64-bit integer value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromInt64(System.Int64)">
            <summary>
            Converts the specified 64-bit integer to string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToColor(System.String)">
            <summary>
            Converts the specified string value to Color.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A Color value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToBrush(System.String)">
            <summary>
            Converts the specified string value to Color.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromColor(System.Windows.Media.Color)">
            <summary>
            Converts the specified color value to string in the format #AARRGGBB.
            </summary>
            <param name="val">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToStreamV4(System.String)">
            <summary>
            Converts the specified string value to stream.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A .NET Stream object that is deserialized from the specified string.
            </returns>
            <remarks>
            This method is used in XML file format 4 and earlier.
            </remarks>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromStreamV4(System.IO.MemoryStream)">
            <summary>
            Converts the specified memory stream to string.
            </summary>
            <param name="val">
            The Stream object to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
            <remarks>
            This method is used in XML file format 4 and earlier.
            </remarks>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToStream(System.String)">
            <summary>
            Converts the specified string value to stream.
            </summary>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A .NET Stream object that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromStream(System.IO.Stream)">
            <summary>
            Converts the specified stream to string.
            </summary>
            <param name="val">
            The Stream object to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromEnum(System.Object)">
            <summary>
            Converts the specified enum value to a string.
            </summary>
            <param name="val">
            The value to convert.
            </param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.ToEnum(System.Type,System.String)">
            <summary>
            Converts the specified string value to its corresponding
            enumeration member of the specified type.
            </summary>
            <param name="type">
            The type of the enumeration to convert to.
            </param>
            <param name="s">
            The string value to convert from.
            </param>
            <returns>
            A member of the specified enumeration that is deserialized from
            the specified string, possibly a null reference (Nothing in Visual
            Basic) if the deserialization failed.
            </returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Converter.FromXmlElement(System.Xml.XmlElement)">
            <summary>
            Deserializes a Point object from the specified XmlElement.
            </summary>
            <param name="point">
            The XmlElement representing the serialized point.
            </param>
            <returns>
            A Point object deserialized from the specified XmlElement.
            </returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.StringArrayConverter">
            <summary>
            Converts comma-separated string values to list of strings and vice versa.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.StringArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertFrom method of TypeConverter.
            The ITypeDescriptorContext interface provides the context for the
            conversion. Typically, this interface is used at design time to 
            provide information about the design-time container.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.StringArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.StringArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.PointToDoubleConverter">
            <summary>
            Converts Point objects to double values.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PointToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.Convert implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PointToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack implementation.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BoolToVisibilityConverter">
            <summary>
            Converts boolean values to Visibility.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.Convert implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack implementation.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CrosshairTypeToVisibilityConverter">
            <summary>
            Converts the type of the crosshair to visibility enum value.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CrosshairTypeToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.Convert override
            </summary>
            <param name="value">The value to convert.</param>
            <param name="targetType">The target type of the conversion.</param>
            <param name="parameter">Parameters for the conversion.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CrosshairTypeToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Implements IValueConverter.ConvertBack
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CrosshairToVisibilityConverter">
            <summary>
            Converts values of the chart crosshair to a value of the Visibility enum.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CrosshairToVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value to one of the Visibility enum values.
            </summary>
            <param name="values">The values to convert.</param>
            <param name="targetType">The target type of the conversion.</param>
            <param name="parameter">Parameters to use by the conversion.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CrosshairToVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the values back to their original types.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="targetTypes">The target types of the conversion.</param>
            <param name="parameter">Parameters to use by the conversion.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.RectToDoubleConverter">
            <summary>
            Converts Rect objects to double values.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.RectToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.Convert implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.RectToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack implementation.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CandleRect.#ctor">
            <summary>
            Creates a new instance of the CandleRect class.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CRect">
            <summary>
            Represents a rectangle with edges calculated 
            according to the Cartesian coordinate system.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CRect.#ctor">
            <summary>
            Creates a new instance of the CRect class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CRect.Top">
            <summary>
            The top coordinate of this CRect object.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CRect.Left">
            <summary>
            Gets the width, measured in the cartesian coorinate system, of this CRect.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CRect.Width">
            <summary>
            Gets the width, measured in the cartesian coorinate system, of this CRect.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CRect.Height">
            <summary>
            Gets the height, measured in the cartesian coordinate system, of this CRect.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CRect.TopLeft">
            <summary>
            Gets the cartesian coorinate of the top left corner of this CRect.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CRect.TopRight">
            <summary>
            Gets the cartesian coorinate of the top right corner of this CRect.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CRect.BottomRight">
            <summary>
            Gets the cartesian coorinate of the bottom right corner of this CRect.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CRect.BottomLeft">
            <summary>
            Gets the cartesian coorinate of the bottom left corner of this CRect.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CrosshairControl">
            <summary>
            Represents the crosshair 
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CrosshairControl.#ctor">
            <summary>
            Initializes a new instance of the CrosshairControl class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CrosshairControl.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Overrides ItemsControl.IsItemItsOwnContainerOverride
            </summary>
            <param name="item">The item.</param>
            <returns>true if the item is its own container; otherwise false.</returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CrosshairPanel">
            <summary>
            Arrange child crosshair elements.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CrosshairPanel.#ctor">
            <summary>
            Initializes a new instance of the CrosshairPanel class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CrosshairPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Implements MeasureOverride
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The desired size.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CrosshairPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Implements ArrangeOverride.
            </summary>
            <param name="finalSize">The available size.</param>
            <returns>The final size.</returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.PointToMarginConverter">
            <summary>
            Converts the value of a Point to a Margin.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PointToMarginConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the Point to a Margin.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PointToMarginConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.MultiConverter">
            <summary>
            Converts multiple values.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.MultiConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the coordinates of a Point to a string to be used by a tool tip.
            </summary>
            <param name="values"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.MultiConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the value back.
            </summary>
            <param name="value"></param>
            <param name="targetTypes"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.DataType">
            <summary>
            Specifies the type of data set in a collection of data.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.DataType.Mix">
            <summary>
            Values are positive and negative.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.DataType.Negative">
            <summary>
            Values are negative.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.DataType.Positive">
            <summary>
            Values are positive.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Mesh">
            <summary>
            Generates a mesh in 3D charts.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Mesh.m_recursion">
            <summary>
            Recursion limit.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Mesh.m_points">
            <summary>
            A list ov vertices that build the mesh points.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Mesh.m_facets">
            <summary>
            The facets.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Mesh.m_bounds">
            <summary>
            Bounds
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Mesh.Points">
            <summary>
            The points.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Mesh.Facets">
            <summary>
            The facets.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Mesh.Bounds">
            <summary>
            Bounds.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Mesh.Recursion">
            <summary>
            Recursion level.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Mesh.GetVertexIndicies">
            <summary>
            Get the indexes for the triangular mesh.
            Points is the points. Every 3 indicies is a triangle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Mesh.Compute(System.Collections.Generic.List{MindFusion.Charting.Wpf.Vertex},System.Windows.Rect,System.Double)">
            <summary>
            Performs computations needed for rendering a 3D chart.
            </summary>
            <param name="set">A list with vertexes.</param>
            <param name="bounds">The bounds.</param>
            <param name="groundLevel">The ground level.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Mesh.Append(MindFusion.Charting.Wpf.Vertex)">
            <summary>
            Appends the specified point.
            </summary>
            <param name="v">The vertex to append.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Mesh.Setup(System.Windows.Rect,System.Double)">
            <summary>
            Performs initial setup for a 3D chart.
            </summary>
            <param name="bounds">The bounds of the chart.</param>
            <param name="groundLevel">The ground level.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Mesh.Insert(MindFusion.Charting.Wpf.Vertex,MindFusion.Charting.Wpf.Triangle)">
            <summary>
            Insert.
            </summary>
            <param name="v"></param>
            <param name="old"></param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Mesh.flipIfNeeded(MindFusion.Charting.Wpf.Triangle,MindFusion.Charting.Wpf.Triangle,System.Int32)">
            <summary>
            Flip if needed.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="depth"></param>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Triangle">
            <summary>
            Triangle class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.ResetIndex">
            <summary>
            Reset the index, indexing gives each triangle an ID
            unique since construction of the mesh.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.#ctor(MindFusion.Charting.Wpf.Triangle)">
            <summary>
            Copy constructor.
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.#ctor(MindFusion.Charting.Wpf.Vertex,MindFusion.Charting.Wpf.Vertex,MindFusion.Charting.Wpf.Vertex)">
            <summary>
            Constructor by vertex.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_a">
            <summary>
            The a-vertex.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_b">
            <summary>
            The b-vertex.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_c">
            <summary>
            The c-vertex.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_abLen">
            <summary>
            The a-length.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_bcLen">
            <summary>
            The b-length.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_caLen">
            <summary>
            The c-length.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_abLenCalcd">
            <summary>
            The ab-length.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_bcLenCalcd">
            <summary>
            The bc-length.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_caLenCalcd">
            <summary>
            The ca-length.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_abDet">
            <summary>
            The ab-determination.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_bcDet">
            <summary>
            The bc-determination.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_caDet">
            <summary>
            The ca-determination.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_abDetCalcd">
            <summary>
            The ab-determination.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_bcDetCalcd">
            <summary>
            The bc-determination.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_caDetCalcd">
            <summary>
            The ca-determination.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_index">
            <summary>
            Index of this triangle for debug.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_ab">
            <summary>
            Identifies the ab side.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_bc">
            <summary>
            Identifies the bc side.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_ca">
            <summary>
            Identifies the ca side.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_centerComputed">
            <summary>
            Identifies the center.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Triangle.m_center">
            <summary>
            Identifies the center vertex.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.Index">
            <summary>
            Index.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.RegionCode">
            <summary>
            Which search region it is in.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.ToString">
            <summary>
            To string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.Center">
            <summary>
            Compute the center
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.FarthestFromCenter">
            <summary>
            Farthest distance a point is from center is distance squared.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.A">
            <summary>
            Vertex A
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.B">
            <summary>
            Vertex B
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.C">
            <summary>
            Vertex C
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.AB">
            <summary>
            Triangle AB shares side AB.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.BC">
            <summary>
            Triangle BC shares side BC.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.CA">
            <summary>
            Triangle CA shares side CA.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.abDet">
            <summary>
            AB det.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.bcDet">
            <summary>
            BC det.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.caDet">
            <summary>
            CA det.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.vertexTest(MindFusion.Charting.Wpf.Vertex,MindFusion.Charting.Wpf.Vertex,MindFusion.Charting.Wpf.Vertex)">
            <summary>
            Vertex sidedness test.
            </summary>
            <param name="la"></param>
            <param name="lb"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.Contains(MindFusion.Charting.Wpf.Vertex)">
            <summary>
            Does this contain t.
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.AB_Length">
            <summary>
            Length of AB, cached and lazy calculated.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.BC_Length">
            <summary>
            Length of BC, cached and lazy calculated.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.CA_Length">
            <summary>
            Length of CA, cached and lazy calculated.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Triangle.Area">
            <summary>
            Area of the triangle.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.Edge_Length(System.Int32)">
            <summary>
            Return the indexed edge length;
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.OpositeOfEdge(System.Int32)">
            <summary>
            Return the oposite of the edge.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.SetVertex(System.Int32,MindFusion.Charting.Wpf.Vertex)">
            <summary>
            Set the vertex by index.
            </summary>
            <param name="i"></param>
            <param name="v"></param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.VertexCosineAngle(System.Int32)">
            <summary>
            Get the cosine angle associated with a vertex.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.VertexAngleRadians(System.Int32)">
            <summary>
            Get the angle of a vertex in radians.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.Inside(System.Windows.Rect)">
            <summary>
            Is this rectangle within the region.
            </summary>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.RepairEdges(MindFusion.Charting.Wpf.Triangle)">
            <summary>
            Repair any Edge links, both ways.
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.bothIn(MindFusion.Charting.Wpf.Triangle,MindFusion.Charting.Wpf.Vertex,MindFusion.Charting.Wpf.Vertex)">
            <summary>
            Checks if both vertexes are in.
            </summary>
            <param name="t">The triangle.</param>
            <param name="a">The A-vertex.</param>
            <param name="b">B-vertex.</param>
            <returns>true if both vertexes are in; otherwise false.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.GetVertex(System.Int32)">
            <summary>
            Vertex.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.SetEdge(System.Int32,MindFusion.Charting.Wpf.Triangle)">
            <summary>
            Set the edge by index.
            </summary>
            <param name="i"></param>
            <param name="t"></param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Triangle.Edge(System.Int32)">
            <summary>
            Get the indexed edge.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Vertex">
            <summary>
            Vertex class
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Vertex.#ctor">
            <summary>
            Vertex default constructor.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Vertex.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Vertex constructor.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Vertex.X">
            <summary>
            X coordinate.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Vertex.Y">
            <summary>
            Y coordinate.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Vertex.Z">
            <summary>
            Z coordinate.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Vertex.Index">
            <summary>
            Index of this vertex.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Vertex.DeltaSquaredXY(MindFusion.Charting.Wpf.Vertex)">
            <summary>
            Delta distance squared between this and other vertex t
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Vertex.DeltaSquared(MindFusion.Charting.Wpf.Vertex)">
            <summary>
            Delta distance squared between this and other vertex t
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Vertex.DistanceXY(MindFusion.Charting.Wpf.Vertex)">
            <summary>
            The distance between this and t.
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Vertex.Distance(MindFusion.Charting.Wpf.Vertex)">
            <summary>
            The distance between this and t.
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Vertex.InsideXY(System.Windows.Rect)">
            <summary>
            Is this rectangle within the region.
            </summary>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Vertex.ToString">
            <summary>
            To string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.InterpolationType">
            <summary>
            Defines shape types that are used when 
            elevations are drawn at the surface chart. 
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.InterpolationType.Bezier">
            <summary>
            Defines bezier interpolation type.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.InterpolationType.Linear">
            <summary>
            Defines linear interpolation type.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.InterpolationType.None">
            <summary>
            Defines no interpolation type.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Behavior">
            <summary>
            Defines values that specify how the component responds to actions performed by the user.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Behavior.DoNothing">
            <summary>
            The control does not respond to actions performed by the user.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Behavior.AllowXDrag">
            <summary>
            Allows dragging of chart points along the X axes.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Behavior.AllowYDrag">
            <summary>
            Allows dragging of chart points along the Y axes.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Behavior.ZoomChart">
            <summary>
            The control responds to actions performed by the user by zooming the chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Behavior.Pan">
            <summary>
            The control responds to actions performed by the user by panning the chart.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ValueFormat">
            <summary>
            Defines type of data related to a chart axis.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ValueFormat.DateTime">
            <summary>
            The data is DateTime values.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ValueFormat.Number">
            <summary>
            The data is numbers.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.SeriesDataType">
            <summary>
            Specifies the type of data used to calculate the coordinates of the series points.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SeriesDataType.XY">
            <summary>
            The data is from XData and YData.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SeriesDataType.XY2">
            <summary>
            The data is from XData and Y2Data.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SeriesDataType.X2Y">
            <summary>
            The data is from X2Data and YData.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SeriesDataType.X2Y2">
            <summary>
            The data is from X2Data and Y2Data.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CrosshairType">
            <summary>
            Identifies how the crosshair is rendered.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CrosshairType.ShowCrosshair">
            <summary>
            Renders only the crosshair.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CrosshairType.ShowValuesX">
            <summary>
            Renders the crosshair together with the X-value.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CrosshairType.ShowValuesY">
            <summary>
            Renders the crosshair with the Y-value.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CrosshairType.ShowValuesXY">
            <summary>
            Renders both the X and Y value and the crosshair.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CanvasInitializedEventArgs">
            <summary>
            Provides data for events that are raised when canvas is initialized. 
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CanvasInitializedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.Canvas)">
            <summary>
            Creates a new CanvasInitializedEventArgs object.
            </summary>
            <param name="routedEvent">The associated event.</param>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CanvasInitializedEventArgs.ChartCanvas">
            <summary>
            Gets the canvas.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CanvasSizeInitializedEventArgs">
            <summary>
            Provides data for events that are raised when canvas size is initialized. 
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CanvasSizeInitializedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Size)">
            <summary>
            Creates a new CanvasSizeInitializedEventArgs object.
            </summary>
            <param name="routedEvent">The associated event.</param>
            <param name="size">The size of the canvas.</param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CanvasSizeInitializedEventArgs.CanvasSize">
            <summary>
            Gets the size of the canvas.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CrosshairPositionChangedArgs">
            <summary>
            Provides details about events triggered by movement of the crosshair.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.CrosshairPositionChangedArgs.#ctor(MindFusion.Charting.Wpf.AxesSeries,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the CrossHairPositionChangedArgs class with the specified 
            arguments.
            </summary>
            <param name="s">The series.</param>
            <param name="x">The X-coordinate of the crosshair.</param>
            <param name="y">The Y-coordinate of the crosshair.</param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CrosshairPositionChangedArgs.Series">
            <summary>
            Gets the series.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CrosshairPositionChangedArgs.XValue">
            <summary>
            Gets the X-value of the cross-hair measured in the Cartesian coordinate system of the 
            chart.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.CrosshairPositionChangedArgs.YValue">
            <summary>
            Gets the Y-value of the cross-hair measured in the Cartesian coordinate system of the 
            chart.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Chart">
            <summary>
            Base class for all charts.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.TitleVisibilityProperty">
            <summary>
            Identifies the TitleVisibility dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.TitleMarginProperty">
            <summary>
            Identifies the TitleMargin dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.TitleFontFamilyProperty">
            <summary>
            Identifies the TitleFontFamily dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.TitleFontSizeProperty">
            <summary>
            Identifies the TitleFontSize dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.TitleFontStyleProperty">
            <summary>
            Identifies the TitleFontStyle dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.TitleFontWeightProperty">
            <summary>
            Identifies the TitleFontWeight dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.LabelFontFamilyProperty">
            <summary>
            Identifies the LabelFontFamily dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.LabelFontSizeProperty">
            <summary>
            Identifies the LabelFontSize dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.LabelFontStyleProperty">
            <summary>
            Identifies the LabelFontStyle dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.LabelFontWeightProperty">
            <summary>
            Identifies the LabelFontWeight dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.PlotAreaMarginProperty">
            <summary>
            Identifies the PlotAreaMargin dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.DataSourceProperty">
            <summary>
            Identifies the DataSource dependency property.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.Chart.DataChanged">
            <summary>
            Occurs when the data for the chart has changed.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.Chart.AppearanceChanged">
            <summary>
            Occurs when the value of a property that influences the appearance of the chart changes.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.#ctor">
            <summary>
            Creates a new Chart object.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.HitTest(System.Windows.Point)">
            <summary>
            Gets a collection of ChartElement objects that contain the specified point as parameter.
            </summary>
            <param name="p">The point to test.</param>
            <returns>A collection of ChartElement objects.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.OnDataChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fired when data on the chart has changed.
            </summary>
            <param name="d">The chart instance that fired the event.</param>
            <param name="e">DependencyPropertyChangedEventArgs object that specifies the event data.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.OnAppearanceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the AppearanceChanged event.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.handleSeriesPropertyChangedEvent(System.String,MindFusion.Charting.Wpf.ChartSeries)">
            <summary>
            Handles the SeriesPropertyChanged event for pie charts.
            </summary>
            <param name="dependencyPropertyName">The name of the dependency property that has raised the event.</param>
            <param name="chartSeries">The ChartSeries that raised the event.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.OnDataSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when data source gets changed.
            </summary>
            <param name="d">The DependencyObject d</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.BoundCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles events which are raised when the bound collection changes (i.e. items added/removed)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.DetectBoundCollectionChanges">
            <summary>
            Iterates over the items inthe bound collection, adding handlers for PropertyChanged events
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"></see>.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.UpdateChart">
            <summary>
            Recalculates and redraws the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.TrialVisibility">
            <summary>
            Gets the visibility of the trial label.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.LicenseKey">
            <summary>
            Gets or sets the license key of the control.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.Series">
            <summary>
            Gets the list with the series in the chart.
            </summary>      
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.BeginInit">
            <summary>
            Control.BeginInit() override.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.EndInit">
            <summary>
            Control.EndInit() override.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.CornerRadius">
            <summary>
            Gets or sets the corner radius of the chart control's bounding rectangle.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.Title">
            <summary>
            Gets or sets the title of the chart.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.TitleVisibility">
            <summary>
            Gets or sets the visibility of the chart's title.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.TitleMargin">
            <summary>
            Gets or sets the margin around the title.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.TitleFontFamily">
            <summary>
            Gets or sets the font family for the title.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.TitleFontSize">
            <summary>
            Gets or sets the font size for the title.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.TitleFontStyle">
            <summary>
            Gets or sets the font style for the title.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.TitleFontWeight">
            <summary>
            Gets or sets the font weight for the title.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.PlotAreaMargin">
            <summary>
            Gets or sets the margin around the plot area.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.Legends">
            <summary>
            Gets or sets a list with the chart legends.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.DataSource">
            <summary>
            Gets or sets the data source. This is a dependency property.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.LabelFontFamily">
            <summary>
            Gets or sets the font family for the chart labels.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.LabelFontSize">
            <summary>
            Gets or sets the font size for the chart labels.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.LabelFontStyle">
            <summary>
            Gets or sets the font style for the chart labels.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.LabelFontWeight">
            <summary>
            Gets or sets the font weight for the chart labels.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.ValidateHitTestElement(System.Windows.FrameworkElement)">
            <summary>
            Checks whether the specified FrameworkElement should be included in the hit-test.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.SaveTheme(System.String)">
            <summary>
            Saves the current theme as a file with the specified name.
            </summary>
            <param name="fileName">The name of the file.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Chart.LoadTheme(System.String)">
            <summary>
            Loads the theme with the specified name.
            </summary>
            <param name="fileName">The name of the file to load.</param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.ChartTheme">
            <summary>
            Gets or sets a ChartTheme that defines the appearance of chart elements.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Chart.ChartEffect">
            <summary>
            Gets or sets the effect to apply to the elements of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Chart.ChartEffectProperty">
            <summary>
            Identifies the ChartEffect dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ChartElement">
            <summary>
            Base class for all graphical elements on the chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartElement.#ctor">
            <summary>
            default constructor.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartElement.CreateShape">
            <summary>
            Creates a Shape that represents this chart element.
            </summary>
            <returns>A Shape instance.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.Fill">
            <summary>
            Gets the fill of the element.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.Stroke">
            <summary>
            Gets or the stroke of the element.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.StrokeThickness">
            <summary>
            Gets the stroke thickness of the element.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.StrokeDashArray">
            <summary>
            Gets the collection of Double values that indicate the pattern
            of dashes and gaps that is used to outline the ChartElement shape. 
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.StrokeDashCap">
            <summary>
            Gets a PenLineCap enumeration value that specifies 
            how the ends of a dash are drawn. 
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.StrokeDashOffset">
            <summary>
            Gets a value that specifies the distance
            within the dash pattern where a dash begins.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.StrokeEndLineCap">
            <summary>
            Gets a PenLineCap enumeration value that describes 
            the Shape at the end of a line. 
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.StrokeLineJoin">
            <summary>
            Gets a PenLineJoin enumeration value that specifies 
            the type of join that is used at the vertices of a Shape.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.StrokeMiterLimit">
            <summary>
            Gets a limit on the ratio of the miter length 
            to half the StrokeThickness of a Shape element. 
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.StrokeStartLineCap">
            <summary>
            Gets a PenLineCap enumeration value that describes 
            the Shape at the start of a line. 
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.Shape">
            <summary>
            Gets or sets the shape that represents this ChartElement.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartElement.Effect">
            <summary>
            Gets or sets the effect of this ChartElement.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ChartSeriesCollection">
            <summary>
            Represents an observable collection of ChartSeries objects.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.LegendsCollection">
            <summary>
            Represents an observable collection of Legend objects.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.AnnotationsCollection">
            <summary>
            Represents an observable collection of Annotation objects.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BarElementCollection">
            <summary>
            Represents an observable collection of Bar objects.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CandlestickElementCollection">
            <summary>
            Represents an observable collection of Candlestick objects.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BrushCollection">
            <summary>
            Represents an observable collection of Brush objects.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.AxesCollection">
            <summary>
            Represents an observable collection of Axis objects.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.FunnelChart">
            <summary>
            A control used to draw funnel charts. Funnel charts represent the stages of a process
            and show relative values or measurements associated with each stage.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.FunnelChart.#ctor">
            <summary>
            Initializes a new instance of the FunnelChart class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.FunnelChart.StemWidth">
            <summary>
            Gets or sets the width of the funnel stem.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.FunnelChart.StemWidthProperty">
            <summary>
            Identifies the StemWidth dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.FunnelChart.ShowLabels">
            <summary>
            Gets or sets whether to show data labels.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.FunnelChart.ShowLabelsProperty">
            <summary>
            Identifies the ShowLabels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.FunnelChart.SegmentPadding">
            <summary>
            Gets or sets the padding space between funnel segments.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.FunnelChart.SegmentPaddingProperty">
            <summary>
            Identifies the SegmentPadding dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.FunnelChart.CurrentSeries">
            <summary>
            Gets or sets the FunnelSeries displayed in this chart.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.FunnelPiece">
            <summary>
            Represents a segment of funnel chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.FunnelPiece.#ctor(System.Double,System.Windows.Media.Brush,System.Int32)">
            <summary>
            Initializes a new instance of the FunnelPiece class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.FunnelPiece.Visible">
            <summary>
            Gets or sets whether this object is visible.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.FunnelPiece.CreateShape">
            <summary>
            Creates a Shape that represents this chart element.
            </summary>
            <returns>A Shape instance.</returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.FunnelSeries">
            <summary>
            Represents a series in a funnel chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.FunnelSeries.#ctor">
            <summary>
            Initializes a new instance of the FunnelSeries class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.FunnelSeries.LabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving labels.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.FunnelSeries.DataPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving
            the data for this series.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.IShapeCreator">
            <summary>
            Interface for objects that represent shapes in the chart.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.LabelPresenter">
            <summary>
            Represents labels in a 3D chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.LabelPresenter.#ctor">
            <summary>
            Initializes a new instance of the LabelPresenter class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.LabelPresenter.#cctor">
            <summary>
            Creates a new instance of the LabelPresenter class.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.LabelProperty">
            <summary>
            Summary description for LabelProperty.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.LabelType">
            <summary>
            Specifies the different types of chart labels that
            can be drawn at the chart axes.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LabelType.AutoScale">
            <summary>
            The labels are the numbers from the numerical auto scale.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LabelType.ChartData">
            <summary>
            The labels are the numbers from the chart data.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LabelType.CustomText">
            <summary>
            The labels are set by the user.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LabelType.Empty">
            <summary>
            No labels are drawn.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LabelType.Percents">
            <summary>
            The labels show the percentage value of each element.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Axis">
            <summary>
            Contains the settings of a chart axis.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Axis.#ctor">
            <summary>
            Initializes a new instance of the AxisSettings class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Axis.OnInnerValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the InnerValueChanged event.
            </summary>
            <param name="d">The dependency object that has raised the event.</param>
            <param name="e">A DependencyPropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Axis.OnIntervalChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the IntervalChanged event.
            </summary>
            <param name="d">The dependency object that has raised the event.</param>
            <param name="e">A DependencyPropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Axis.IsValidAngle(System.Object)">
            <summary>
            Checks if the given value is valid value for an angle.
            </summary>
            <param name="value">The value to check.</param>
            <returns>true if the value is valie value for an angle; otherwise false.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.ValueFormat">
            <summary>
            Gets or sets the format of data related to this axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.ValueFormatProperty">
            <summary>
            Identifies the ValueFormat dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.LabelFormat">
            <summary>
            Gets or sets the format of the labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelFormatProperty">
            <summary>
            Identifies the LabelFormat dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.Interval">
            <summary>
            Gets or sets the interval between two adjacent values at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.MinValue">
            <summary>
            Gets or sets the minimum value at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.MinValueProperty">
            <summary>
            Identifies the MinValue dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.MaxValue">
            <summary>
            Gets or sets the maximum value at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.MaxValueProperty">
            <summary>
            Identifies the MaxValue dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.AxisCrossingPoint">
            <summary>
            Gets or sets the point where this axis is crossed by the other axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.AxisCrossingPointProperty">
            <summary>
            Identifies the AxisCrossingPoint dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.TitleOffset">
            <summary>
            Gets or sets the offset of the title label from the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.TitleOffsetProperty">
            <summary>
            Identifies the TitleOffset dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.Labels">
            <summary>
            Gets or sets custom labels for the axis.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelsProperty">
            <summary>
            Identifies the Labels dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.LabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving X-labels.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelPathProperty">
            <summary>
            Identifies the LabelPath dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.LabelOffset">
            <summary>
            Gets or sets the offset of the label from the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelOffsetProperty">
            <summary>
            Identifies the LabelOffset dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.HorLabelAlignment">
            <summary>
            Gets or sets the horizontal alignment of labels at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.HorLabelAlignmentProperty">
            <summary>
            Identifies the HorLabelAlignment dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.VertLabelAlignment">
            <summary>
            Gets or sets the vertical alignment of labels at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.VertLabelAlignmentProperty">
            <summary>
            Identifies the VertLabelAlignment dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.Title">
            <summary>
            Gets or sets the title of the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.Tick">
            <summary>
            Gets or sets the length of tick marks.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.TickProperty">
            <summary>
            Identifies the Tick dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.LabelType">
            <summary>
            Gets or sets the type of labels drawn at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelTypeProperty">
            <summary>
            Identifies the LabelType dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle of labels at a horizontal axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelRotationAngleProperty">
            <summary>
            Identifies the LabelRotationAngle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.TitleRotationAngle">
            <summary>
            Gets or sets the rotation angle of the title label at a horizontal axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.TitleRotationAngleProperty">
            <summary>
            Identifies the TitleRotationAngle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.TitleFontFamily">
            <summary>
            Gets or sets the font family for the title.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.TitleFontFamilyProperty">
            <summary>
            Identifies the TitleFontFamily dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.TitleFontSize">
            <summary>
            Gets or sets the font size for the title.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.TitleFontSizeProperty">
            <summary>
            Identifies the TitleFontSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.TitleFontStyle">
            <summary>
            Gets or sets the font style for the title.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.TitleFontStyleProperty">
            <summary>
            Identifies the TitleFontStyle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.TitleFontWeight">
            <summary>
            Gets or sets the font weight for the title.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.TitleFontWeightProperty">
            <summary>
            Identifies the TitleFontWeight dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.LabelFontFamily">
            <summary>
            Gets or sets the font family for the labels at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelFontFamilyProperty">
            <summary>
            Identifies the LabelFontFamily dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.LabelFontSize">
            <summary>
            Gets or sets the font size for the labels at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelFontSizeProperty">
            <summary>
            Identifies the LabelFontSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.LabelFontStyle">
            <summary>
            Gets or sets the font style for the chart labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelFontStyleProperty">
            <summary>
            Identifies the LabelFontStyle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.LabelFontWeight">
            <summary>
            Gets or sets the font weight for the labels at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelFontWeightProperty">
            <summary>
            Identifies the LabelFontWeight dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.CustomLabelPosition">
            <summary>
            Gets or sets the position of custom labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.CustomLabelPositionProperty">
            <summary>
            Identifies the CustomLabelPosition dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.Stroke">
            <summary>
            Gets or sets the brush for drawing the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.LabelStroke">
            <summary>
            Gets or sets the brush for drawing the labels at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.LabelStrokeProperty">
            <summary>
            Identifies the LabelStroke dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.TitleStroke">
            <summary>
            Gets or sets the brush for drawing the title of the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.TitleStrokeProperty">
            <summary>
            Identifies the TitleStroke dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.StrokeThickness">
            <summary>
            Gets or sets the thickness of the stroke for this axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary> 
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.IntervalCount">
            <summary>
            Gets or sets the count of intervals at the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.IntervalCountProperty">
            <summary>
            Identifies the IntervalCount dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Axis.AxisOffset">
            <summary>
            Gets or sets the offset of the axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Axis.AxisOffsetProperty">
            <summary>
            Identifies the AxisOffset dependency property.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.Axis.InnerValueChanged">
            <summary>
            Occurs when a property of the AxisSettings object has changed.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxisType.XAxis">
            <summary>
            Indicates the X-axis.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxisType.X2Axis">
            <summary>
            Indicates the second X-axis.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxisType.YAxis">
            <summary>
            Indicates the Y-axis.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxisType.Y2Axis">
            <summary>
            Indicates the second Y-axis.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxisType.ZAxis">
            <summary>
            Indicates the Z-axis.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.AxisType.Z2Axis">
            <summary>
            Indicates the second Z-axis.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BarChart">
            <summary>
            Represents a bar chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarChart.SeriesWidthProperty">
            <summary>
            Identifies the SeriesWidth dependency property.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BarChart.#ctor">
            <summary>
            Creates a new bar chart.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarChart.SeriesWidth">
            <summary>
            Gets or sets the width of the bar series.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BarSeries">
            <summary>
            Represents a series in a bar chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BarSeries.#ctor(MindFusion.Charting.Wpf.Axis,MindFusion.Charting.Wpf.Axis)">
            <summary>
            Creates a new instance of the BarSeries class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.BarSeries.#ctor">
            <summary>
            Initializes a new instance of the BarSeries class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.BarWidth">
            <summary>
            Gets or sets the width of the bar.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.BarWidthProperty">
            <summary>
            Identifies the BarWidth dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.TopLabelPath">
            <summary>
            Gets or sets the path used for retrieving top label values from the DataSource.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.TopLabelPathProperty">
            <summary>
            Identifies the TopLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.InnerLabelPath">
            <summary>
            Gets or sets the path used for retrieving inner label values from the DataSource.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.InnerLabelPathProperty">
            <summary>
            Identifies the InnerLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.Progress">
            <summary>
            Gets or sets a list that indicates the progress of bars in the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.ProgressProperty">
            <summary>
            Identifies the Progress dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.ProgressPath">
            <summary>
            Gets or sets the path used for retrieving progress values from the DataSource.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.ProgressPathProperty">
            <summary>
            Identifies the ProgressPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.InnerLabel">
            <summary>
            Gets or sets the custom inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.InnerLabelProperty">
            <summary>
            Identifies the InnerLabel dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.TopLabel">
            <summary>
            Gets or sets the custom top labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.TopLabelProperty">
            <summary>
            Identifies the TopLabel dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.TopLabelType">
            <summary>
            Gets or sets the type of the top labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.TopLabelTypeProperty">
            <summary>
            Identifies the TopLabelType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.TopLabelOffset">
            <summary>
            Gets or sets the offset of the top label from the edge of the bar.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.TopLabelOffsetProperty">
            <summary>
            Identifies the TopLabelOffset dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.InnerLabelType">
            <summary>
            Gets or sets the type of the inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.InnerLabelTypeProperty">
            <summary>
            Identifies the InnerLabelType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.Annotations">
            <summary>
            Gets the list with the annotations of this series.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.InnerLabelAlignment">
            <summary>
            Gets or sets alignment of the inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.InnerLabelAlignmentProperty">
            <summary>
            Identifies the InnerLabelAlignment dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.BarSeries.InnerLabelClip">
             <summary>
            
             </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarSeries.InnerLabelClipProperty">
            <summary>
            Identifies the InnerLabelClip dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.BarType">
            <summary>
            Specifies the types of bar charts supported by the control.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType.Vertical">
            <summary>
            Bars are drawn vertical.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType.Horizontal">
            <summary>
            Bars are drawn horizontal.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType.VerticalStack">
            <summary>
            Bars are drawn in a vertical stack.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType.HorizontalStack">
            <summary>
            Bars are drawn in a horizontal stack.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType.VerticalOverlay">
            <summary>
            Bars are drawn vertical and bars from each series are drawn inside the respective bar from the previous series.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.BarType.HorizontalOverlay">
            <summary>
            Bars are drawn horizontal and bars from each series are drawn inside the respective bar from the previous series.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ChartSeries">
            <summary>
            Base class for Series in the chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartSeries.#ctor">
            <summary>
            Initializes a new instance of the ChartSeries class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartSeries.OnDataChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the DataChanged event.
            </summary>
            <param name="d">The ChartSeries that raised the event.</param>
            <param name="e">DependencyPropertyChangedEventArgs that contains data for the event.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartSeries.OnAppearanceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the AppearanceChanged event.
            </summary>
            <param name="d">The object that raised the event.</param>
            <param name="e">DependencyPropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartSeries.GetFill(System.Int32)">
            <summary>
            Gets a Brush from the Fills list.
            </summary>
            <param name="index">The index of the Brush to get.</param>
            <returns>The Brush at the specified location.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.Title">
            <summary>
            Gets or sets the title of the series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.StrokeThickness">
            <summary>
            Gets or sets the thickness of the stroke for the series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.StrokeDashArray">
            <summary>
            Gets or sets a collection of double values that indicate the pattern of 
            dashes and gaps that is used to outline ChartSeries shapes.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.StrokeDashCap">
            <summary>
            Gets or sets a PenLineCap enumeration value that specifies how 
            the ends of a dash in a ChartSeries shape are drawn.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.StrokeDashCapProperty">
            <summary>
            Identifies the StrokeDashCap dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.StrokeDashOffset">
            <summary>
            Gets or sets a double that specifies the distance 
            within the dash pattern where a dash begins.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.StrokeDashOffsetProperty">
            <summary>
            Identifies the StrokeDashOffset dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.StrokeEndLineCap">
            <summary>
            Gets or sets a PenLineCap enumeration value 
            that describes the shape at the end of a line.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.StrokeEndLineCapProperty">
            <summary>
            Identifies the StrokeEndLineCap dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.StrokeLineJoin">
            <summary>
            Gets or sets a PenLineJoin enumeration value that specifies 
            the type of join that is used at the vertices of a ChartSeries shape.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.StrokeLineJoinProperty">
            <summary>
            Identifies the StrokeLineJoin dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.StrokeMiterLimit">
            <summary>
            Gets or sets a limit on the ratio of the miter length 
            to half the StrokeThickness of a ChartSeries shape element.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.StrokeMiterLimitProperty">
            <summary>
            Identifies the StrokeMiterLimit dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.StrokeStartLineCap">
            <summary>
            Gets or sets a PenLineCap enumeration value 
            that describes the shape at the start of a line. 
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.StrokeStartLineCapProperty">
            <summary>
            Identifies the StrokeStartLineCap dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.LabelFontFamily">
            <summary>
            Gets or sets the font family for the chart labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.LabelFontFamilyProperty">
            <summary>
            Identifies the LabelFontFamily dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.LabelFontSize">
            <summary>
            Gets or sets the font size for the chart labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.LabelFontSizeProperty">
            <summary>
            Identifies the LabelFontSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.LabelFontStyle">
            <summary>
            Gets or sets the font style for the chart labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.LabelFontStyleProperty">
            <summary>
            Identifies the LabelFontStyle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.LabelFontWeight">
            <summary>
            Gets or sets the font weight for the chart labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.LabelFontWeightProperty">
            <summary>
            Identifies the LabelFontWeight dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.LabelBorderBrush">
            <summary>
            Gets or sets the brush for the label border.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.LabelBorderBrushProperty">
            <summary>
            Identifies the LabelBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.LabelBorderThickness">
            <summary>
            Gets or sets the thickness of the label border.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.LabelBorderThicknessProperty">
            <summary>
            Identifies the LabelBorderThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.LabelBackground">
            <summary>
            Gets or sets the background of the label.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.LabelBackgroundProperty">
            <summary>
            Identifies the LabelBackground dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.LabelForeground">
            <summary>
            Gets or sets the foreground of the label.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.LabelForegroundProperty">
            <summary>
            Identifies the LabelForeground dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.Index">
            <summary>
            Gets or sets the index of this ChartSeries.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.EffectiveFills">
            <summary>
            Gets the actual fill brushes of the series. Returns Fills if there is
            at least one locally defined brush. Otherwise, returns FillsSource if
            it is not null. Otherwise, returns an empty enumerable. The return
            value is guaranteed to be non-null.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.Fills">
            <summary>
            Gets the fills of the series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.FillsProperty">
            <summary>
            Identifies the Fills dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.FillsSource">
            <summary>
            Gets or sets a list of brushes used for filling elements in this ChartSeries.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.FillsSourceProperty">
            <summary>
            Identifies the FillsSource dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.EffectiveStrokes">
            <summary>
            Gets the actual fill brushes of the series. Returns Fills if there is
            at least one locally defined brush. Otherwise, returns FillsSource if
            it is not null. Otherwise, returns an empty enumerable. The return
            value is guaranteed to be non-null.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.Strokes">
            <summary>
            Gets the strokes of the series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.StrokesProperty">
            <summary>
            Identifies the Strokes dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.StrokesSource">
            <summary>
            Gets or sets a list of brushes used as a source for the strokes 
            used to outline chart elements in this ChartSeries.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.StrokesSourceProperty">
            <summary>
            Identifies the StrokesSource dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.ToolTipType">
            <summary>
            Gets or sets a value specifying what tooltips to display for the values in this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.ToolTipTypeProperty">
            <summary>
            Identifies the ToolTipType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.ToolTipText">
            <summary>
            Gets or sets the tooltips to use when ToolTipType is set to Custom.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.ToolTipTextProperty">
            <summary>
            Identifies the ToolTipText dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ChartSeries.Chart">
            <summary>
            Gets or sets the Chart this ChartSeries is part of.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ChartSeries.ChartProperty">
            <summary>
            Identifies the Chart dependency property.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.ChartSeries.DataChanged">
            <summary>
            Occurs when series data was changed.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.ChartSeries.DataMinorChanged">
            <summary>
            Occurs when series data was changed.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.ChartSeries.AppearanceChanged">
            <summary>
            Occurs when series appearance was changed.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CustomLabelPosition">
            <summary>
            Specifies where custom labels are drawn.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CustomLabelPosition.AutoScalePoints">
            <summary>
            The labels are the drawn at auto scale points.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.CustomLabelPosition.ChartDataPoints">
            <summary>
            The labels are draw at data points.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.GridType">
            <summary>
            Specifies the possible grid options for chart elements that support grid.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.GridType.Crossed">
            <summary>
            The grid is built of vertical and horizontal lines, which follow the
            intervals of the two axes.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.GridType.Horizontal">
            <summary>
            The grid is built of horizontal lines only.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.GridType.None">
            <summary>
            No grid is drawn.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.GridType.Vertical">
            <summary>
            The grid is built of vertical lines only.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.GridType.Custom">
            <summary>
            The grid lines are built according to the values in the XGridLines and
            YGridLines properties.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.LayoutPanel">
            <summary>
            Represents the panel of the whole chart.  
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.LayoutPanel.SetDock(System.Windows.UIElement,System.Windows.Controls.Dock)">
            <summary>
            Sets the dock of an element added to the layout panel.
            </summary>
            <param name="element">The element to be added.</param>
            <param name="dock">The dock.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.LayoutPanel.GetDock(System.Windows.UIElement)">
            <summary>
            Gets the dock of an element contained in the LayoutPanel.
            </summary>
            <param name="element">The element.</param>
            <returns>The dock of the element.</returns>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LayoutPanel.DockProperty">
            <summary>
            Identifies the Dock attached property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LayoutPanel.PlotArea">
            <summary>
            Gets or sets the plot area where the chart is drawn.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LayoutPanel.PlotAreaProperty">
            <summary>
            Identifies the RootElement dependency property.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.LayoutPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            FrameworkElement.MeasureOverride override.
            </summary>
            <param name="availableSize">The size available for the LayoutPanel.</param>
            <returns>The size requested by the LayoutPanel.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.LayoutPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            FrameworkElement.ArrangeOverride override.
            </summary>
            <param name="finalSize">The size allocated for the LayoutPanel.</param>
            <returns>The size used by the LayoutPanel.</returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Legend">
            <summary>
            A base class for classes that create legends in the chart.
            </summary>  
        </member>
        <member name="M:MindFusion.Charting.Wpf.Legend.#ctor">
            <summary>
            Initializes a new instance of the Legend class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Legend.OnAppearanceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the AppearanceChanged event.
            </summary>
            <param name="d">The object that raised the event.</param>
            <param name="e">DependencyPropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Legend.CornerRadius">
            <summary>
            Gets or sets the corner radius of the legend.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Legend.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Legend.ShapeSize">
            <summary>
            Gets or sets the size of the shapes in the legend.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Legend.ShapeSizeProperty">
            <summary>
            Identifies the ShapeSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Legend.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness of lines drawn in the legend.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Legend.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Legend.Orientation">
            <summary>
            Gets or sets the orientation of the legend.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Legend.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Legend.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the legend when placed
            at the top or  bottom of the plot area.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Legend.HorizontalAlignmentProperty">
            <summary>
            Identifies the HorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Legend.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the legend when placed
            at the left or right of the plot area.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.Legend.VerticalAlignmentProperty">
            <summary>
            Identifies the VerticalAlignment dependency property.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.Legend.AppearanceChanged">
            <summary>
            Occurs when the appearance of the legend was changed.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.LegendItem">
            <summary>
            Represents an item in a SeriesLegend.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LegendItem.Brush">
            <summary>
            The Brush used for painting the shape of this item.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LegendItem.BrushProperty">
            <summary>
            Identifies the Brush dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LegendItem.Label">
            <summary>
            The label for this item.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LegendItem.LabelProperty">
            <summary>
            Identifies the Label dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.LightType">
            <summary>
            Defines light types that can be used in a 3D chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LightType.Directional">
            <summary>
            Defines a light that projects its effect along a specified vector.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LightType.Ambient">
            <summary>
            Defines a light that provides constant lightening at the 3D scene.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Line">
            <summary>
            Represents a line in line charts.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Line.CreateShape">
            <summary>
            Creates a Shape that represents the line element.
            </summary>
            <returns>A Shape object.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Line.Points">
            <summary>
            Gets the points for this line.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Line.LineType">
            <summary>
            Gets the type of the line.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Line.SeriesIndex">
            <summary>
            Gets the index of the series represented by this line.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Line.DataPoints">
            <summary>
            Gets the data points this line represents.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.LineChart">
            <summary>
            Represents a line chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.LineChart.#ctor">
            <summary>
            Initializes a new instance of the LineChart class.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.LineSeries">
            <summary>
            Represents a series in a line chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.LineSeries.#ctor(MindFusion.Charting.Wpf.Axis,MindFusion.Charting.Wpf.Axis)">
            <summary>
            Creates a new LineSeries.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.LineSeries.#ctor">
            <summary>
            Initializes a new instance of the LineSeries class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.ScatterType">
            <summary>
            Gets or sets the type of the scatter for the series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineSeries.ScatterTypeProperty">
            <summary>
            Identifies the ScatterType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.ScatterSize">
            <summary>
            Gets or sets the size of the scatter for the series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineSeries.ScatterSizeProperty">
            <summary>
            Identifies the ScatterSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.Labels">
            <summary>
            Gets or sets the labels drawn at data points.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineSeries.LabelsProperty">
            <summary>
            Identifies the Labels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.LabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving custom labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineSeries.LabelPathProperty">
            <summary>
            Identifies the LabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.ScatterStrokeThickness">
            <summary>
            Gets or sets the thickness of the scatter strokes.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineSeries.ScatterStrokeThicknessProperty">
            <summary>
            Identifies the ScatterStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.Curve">
            <summary>
            Gets or sets a value indicating whether the line is drawn as a canonical spline.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineSeries.CurveProperty">
            <summary>
            Identifies the Curve dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.ScatterStrokes">
            <summary>
            Gets the strokes of the scatters.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.ScatterStrokesSource">
            <summary>
            Gets or sets a strongly typed collection of brushes, which will be used
            as a source for the brushes used to stroke the scatters in this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineSeries.ScatterStrokesSourceProperty">
            <summary>
            Identifies the ScatterStrokesSource dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.ScatterFills">
            <summary>
            Gets the fills of the scatters.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.ScatterFillsSource">
            <summary>
            Gets or sets a strongly typed collection of brushes, which will be used
            as a source for the brushes used to fill the scatters in this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineSeries.ScatterFillsSourceProperty">
            <summary>
            Identifies the ScatterFills property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.LineSeries.LabelOffset">
            <summary>
            Gets or sets the offset of the labels displayed for the values in this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineSeries.LabelOffsetProperty">
            <summary>
            Identifies the LabelOffset dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.LineType">
            <summary>
            Specifies the type of the line chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineType.Area2D">
            <summary>
            the chart is drawn as an area.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineType.Area2DStack">
            <summary>
            the chart is drawn as a stacked area.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineType.Line">
            <summary>
            the chart is drawn as a line.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.LineType.None">
            <summary>
            No graphic is drawn.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ChartSeriesToBrushConverter">
            <summary>
            Returns the Brush that corresponds to the given ChartSeries.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartSeriesToBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a ChartSeries to a Brush.
            </summary>
            <param name="value">The </param>
            <param name="targetType">The type of the target property in the binding.</param>
            <param name="parameter">A parameter to use in the conversion. </param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A Brush object.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartSeriesToBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ChartSeriesToStrokeConverter">
            <summary>
            Returns the Stroke that corresponds to the given ChartSeries.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartSeriesToStrokeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a ChartSeries to a Stroke.
            </summary>
            <param name="value">The </param>
            <param name="targetType">The type of the target property in the binding.</param>
            <param name="parameter">A parameter to use in the conversion. </param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns>A Brush object.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ChartSeriesToStrokeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.SliceLayout">
            <summary>
            Defines values that specify the layout of slices in a 3D pie chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SliceLayout.Flat">
            <summary>
            The slices are drawn flat.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SliceLayout.Cascading">
            <summary>
            The slices are drawn cascading.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.PieChart">
            <summary>
            Represents a pie chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PieChart.#ctor">
            <summary>
            Initializes a new instance of the PieChart class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PieChart.MeasureSlices">
            <summary>
            calculates the space needed for all slices, their detachment and labels. 
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.PieChart3D">
            <summary>
            Represents a PieChart3D chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PieChart3D.#ctor">
            <summary>
            Initializes a new instance of the PieChart3D class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PieChart3D.HitTest(System.Windows.Point)">
            <summary>
            Chart3D.HitTest override.
            </summary>
            <param name="p">The point to test.</param>
            <returns>An instance of the ChartHitTestResult3D class.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieChart3D.StartAngle">
            <summary>
            Gets or sets the angle from which pie slices are drawn.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieChart3D.StartAngleProperty">
            <summary>
            Identifies the StartAngle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieChart3D.RoundCornerType">
            <summary>
            Gets or sets at which corners of the pie chart the CornerRadius3D property will be applied.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieChart3D.RoundCornerTypeProperty">
            <summary>
            Identifies the RoundCornerType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieChart3D.DoughnutThickness">
            <summary>
            Gets or sets the inner radius of doughnut charts.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieChart3D.DoughnutThicknessProperty">
            <summary>
            Identifies the DoughnutThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieChart3D.SliceLayout">
            <summary>
            Gets or sets the layout of the pie slices.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieChart3D.SliceLayoutProperty">
            <summary>
            Identifies the SliceLayout dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieChart3D.DetachOrientation">
            <summary>
            Gets or sets the orientation of the detached pie slices.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieChart3D.DetachOrientationProperty">
            <summary>
            Identifies the DetachOrientation dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieChart3D.CornerRadius3D">
            <summary>
            Gets or sets the corner radius of the 3D pie slices.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieChart3D.CornerRadius3DProperty">
            <summary>
            Identifies the CornerRadius3D dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.PieSlice">
            <summary>
            Represents a slice in a pie chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PieSlice.CreateShape">
            <summary>
            Creates a Shape that represents the pie slice.
            </summary>
            <returns>A Shape object.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSlice.SeriesIndex">
            <summary>
            Gets the index of the series of this pie slice.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSlice.SliceIndex">
            <summary>
            Gets the index of this pie slice in the series.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSlice.RadiusX">
            <summary>
            Gets the X-radius of the pie this slice is taken of.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSlice.RadiusY">
            <summary>
            Gets the Y-radius of the pie this slice is taken of.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSlice.Detached">
            <summary>
            Gets the distance at which this slice is detached.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSlice.StartAngle">
            <summary>
            Gets the start angle of the slice.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSlice.SweepAngle">
            <summary>
            Gets the sweep angle of the slice.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSlice.SliceValue">
            <summary>
            Gets the data this slice represents.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSlice.Percent">
            <summary>
            Gets the percent from the pie this slice represents.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.PieSeries">
            <summary>
            Represents a series in a pie chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PieSeries.#ctor">
            <summary>
            Initializes a new instance of the PieSeries class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PieSeries.IsValidThickness(System.Object)">
            <summary>
            Chckes if the new value of the Thickness property 
            is within the acceptable range.
            </summary>
            <param name="value">The new value for the Thickness property.</param>
            <returns>true if the new value is acceptable; otherwise false.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.StartAngle">
            <summary>
            Gets or sets the start angle of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.StartAngleProperty">
            <summary>
            Identifies the StartAngle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.PieType">
            <summary>
            Gets or sets the type of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.PieTypeProperty">
            <summary>
            Identifies the PieType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.Data">
            <summary>
            Gets or sets the data for the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.DataProperty">
            <summary>
            Identifies the Data dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.DataPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving the data for this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.DataPathProperty">
            <summary>
            Identifies the DataPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.InnerLabel">
            <summary>
            Gets or sets the custom inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.InnerLabelProperty">
            <summary>
            Identifies the InnerLabel dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.InnerLabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving custom inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.InnerLabelPathProperty">
            <summary>
            Identifies the InnerLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.OuterLabel">
            <summary>
            Gets or sets the custom outer labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.OuterLabelProperty">
            <summary>
            Identifies the OuterLabel dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.OuterLabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving custom outer labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.OuterLabelPathProperty">
            <summary>
            Identifies the OuterLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.OuterLabelType">
            <summary>
            Gets or sets the type of labels drawn outside pie slices.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.OuterLabelTypeProperty">
            <summary>
            Identifies the OuterLabelType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.OuterLabelOffset">
            <summary>
            Gets or sets the offset of the outer label from the edge of the pie.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.OuterLabelOffsetProperty">
            <summary>
            Identifies the OuterLabelOffset dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.InnerLabelType">
            <summary>
            Gets or sets the type of labels drawn inside pie slices.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.InnerLabelTypeProperty">
            <summary>
            Identifies the InnerLabelType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.DetachedSlicesList">
            <summary>
            Gets or sets the position of detached slices.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.DetachedSlicesListProperty">
            <summary>
            Identifies the DetachedSlicesList dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.DoughnutThickness">
            <summary>
            Gets or sets the thickness of the doughnut as a percent from the radius of the pie.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.DoughnutThicknessProperty">
            <summary>
            Identifies the DoughnutThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.PieSeries.InnerLabelLocation">
            <summary>
            Gets or sets the location of the inner label.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieSeries.InnerLabelLocationProperty">
            <summary>
            Identifies the InnerLabelOffset dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.PieType">
            <summary>
            Specifies the type of the pie chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieType.Doughnut2D">
            <summary>
            The chart is drawn as a doughnut.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PieType.Pie2D">
            <summary>
            The chart is drawn as a 2D pie.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CanvasSizeInitializedEventHandler">
            <summary>
            Delegate for the CanvasSizeInitialized event.
            </summary>
            <param name="sender">The object that fired the event.</param>
            <param name="e">CanvasSizeInitializedEventArgs object that gives information about the event.</param>
        </member>
        <member name="T:MindFusion.Charting.Wpf.CanvasInitializedEventHandler">
            <summary>
            Delegate for the CanvasInitialized event.
            </summary>
            <param name="sender">The object that fired the event.</param>
            <param name="e">CanvasInitializedEventArgs object that gives information about the event.</param>
        </member>
        <member name="T:MindFusion.Charting.Wpf.PlotArea">
            <summary>
            Represents the plot area where the chart is drawn.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PlotArea.PlotAreaCanvasInitializedEvent">
            <summary>
            Event that is raised when the PlotAreaCanvas is initialized.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.PlotArea.CanvasSizeInitializedEvent">
            <summary>
            Event that is raised when the size of the PlotAreaCanvas is initialized.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.PlotArea.PlotAreaCanvasInitialized">
            <summary>
            Represents the method that handles the PlotAreaCanvasInitialized event.
            </summary>
        </member>
        <member name="E:MindFusion.Charting.Wpf.PlotArea.CanvasSizeInitialized">
            <summary>
            Represents the method that handles the CanvasSizeInitialized event.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PlotArea.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"></see>.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.PlotArea.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions the element and determines its size.
            </summary>
            <param name="finalSize">The area this element should use to arrange itself.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.RadarChart">
            <summary>
            Represents a radar chart.
            </summary>	
        </member>
        <member name="M:MindFusion.Charting.Wpf.RadarChart.#ctor">
            <summary>
            Initializes a new instance of the RadarChart class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.RadarChart.OnApplyTemplate">
            <summary>
            FrameworkElement.ApplyTemplate override.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterAxisStroke">
            <summary>
            Gets or sets the stroke for the outer axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterAxisStrokeProperty">
            <summary>
            Identifies the OuterAxisStroke dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterStrokeThickness">
            <summary>
            Gets or sets the thickness of the stroke for the outer axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterStrokeThicknessProperty">
            <summary>
            Identifies the OuterStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterStrokeDashArray">
            <summary>
            Gets or sets the dash array of the stroke for the outer axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterStrokeDashArrayProperty">
            <summary>
            Identifies the OuterStrokeDashArray dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerAxisStroke">
            <summary>
            Gets or sets the stroke for the inner axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerAxisStrokeProperty">
            <summary>
            Identifies the InnerAxisStroke dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerStrokeThickness">
            <summary>
            Gets or sets the thickness of the stroke for the inner axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerStrokeThicknessProperty">
            <summary>
            Identifies the InnerStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerStrokeDashArray">
            <summary>
            Gets or sets the dash array of the stroke for the inner axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerStrokeDashArrayProperty">
            <summary>
            Identifies the InnerStrokeDashArray dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.AngleDirection">
            <summary>
            Gets or sets the sweep direction of the angles in a polar chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.AngleDirectionProperty">
            <summary>
            Identifies the AngleDirection dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.StartAngle">
            <summary>
            Gets or sets the start angle in a polar chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.StartAngleProperty">
            <summary>
            Identifies the StartAngle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerLabels">
            <summary>
            Gets or sets the custom labels for the inner axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerLabelsProperty">
            <summary>
            Identifies the InnerLabels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerLabelPath">
            <summary>
            Gets or sets the path to the property in the DataSource used for retrieving custom labels for the inner axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerLabelPathProperty">
            <summary>
            Identifies the InnerLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerLabelType">
            <summary>
            Gets or sets the type of labels drawn at the inner axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerLabelTypeProperty">
            <summary>
            Identifies the InnerLabelType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerLabelOffset">
            <summary>
            Gets or sets the offset of the labels drawn at the inner axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerLabelOffsetProperty">
            <summary>
            Identifies the InnerLabelOffset dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerLabelBorderBrush">
            <summary>
            Gets or set the brush for the border drawn around inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerLabelBorderBrushProperty">
            <summary>
            Identifies the InnerLabelBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerLabelBorderThickness">
            <summary>
            Gets or sets the thickness of the border drawn around inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerLabelBorderThicknessProperty">
            <summary>
            Identifies the InnerLabelBorderThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerLabelBackground">
            <summary>
            Gets or sets the background for the inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerLabelBackgroundProperty">
            <summary>
            Identifies the InnerLabelBackground dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerLabelForeground">
            <summary>
            Gets or sets the brush for the foreground of the inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerLabelForegroundProperty">
            <summary>
            Identifies the InnerLabelForeground dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterLabels">
            <summary>
            Gets or sets the custom outer labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterLabelsProperty">
            <summary>
            Identifies the OuterLabels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterLabelPath">
            <summary>
            Gets or sets the path to the property of the DataSource used for retrieving custom labels for the outer axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterLabelPathProperty">
            <summary>
            Identifies the OuterLabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterLabelType">
            <summary>
            Gets or sets the type of labels drawn at the outer axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterLabelTypeProperty">
            <summary>
            Identifies the OuterLabelType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterLabelOffset">
            <summary>
            Gets or sets the offset of the outer label from the edge of the radar.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterLabelOffsetProperty">
            <summary>
            Identifies the OuterLabelOffset dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterLabelBorderBrush">
            <summary>
            Gets or sets the brush for the border of the outer labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterLabelBorderBrushProperty">
            <summary>
            Identifies the OuterLabelBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterLabelBorderThickness">
            <summary>
            Gets or sets the thickness of the border of the outer labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterLabelBorderThicknessProperty">
            <summary>
            Identifies the OuterLabelBorderThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterLabelBackground">
            <summary>
            Gets or sets the brush that fills the background of the outer labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterLabelBackgroundProperty">
            <summary>
            Identifies the OuterLabelBackground dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.OuterLabelForeground">
            <summary>
            Gets or sets the brush for the foreground of the outer labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.OuterLabelForegroundProperty">
            <summary>
            Identifies the OuterLabelForeground dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.MinValue">
            <summary>
            Gets or sets the minimum value of the radar.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.MinValueProperty">
            <summary>
            Identifies the MinValue dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.MaxValue">
            <summary>
            Gets or sets the maximum value of the radar.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.MaxValueProperty">
            <summary>
            Identifies the MaxValue dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.Interval">
            <summary>
            Gets or sets the interval at the inner axis.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerLabelAngle">
            <summary>
            Gets or sets the angle of the inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerLabelAngleProperty">
            <summary>
            Identifies the InnerLabelAngle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.RadarType">
            <summary>
            Gets or sets the type of the radar chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.RadarTypeProperty">
            <summary>
            Identifies the RadarStyle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.AngleStep">
            <summary>
            Gets or sets the increment step for the angles that build the sections of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.AngleStepProperty">
            <summary>
            Identifies the InnerStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.InnerLabelPosition">
            <summary>
            Gets or sets the position of the inner labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.InnerLabelPositionProperty">
            <summary>
            Identifies the InnerLabelPosition dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.SectionBrushes">
            <summary>
            Gets or sets a list with the brushes used for painting
            the sections of the radar chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.SectionBrushesProperty">
            <summary>
            Identifies the SectionBrushes dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarChart.SectionStrokes">
            <summary>
            Gets or sets a list of brushes used for outlining
            the sections of the radar chart.
            This is a dependency property.
            </summary> 
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarChart.SectionStrokesProperty">
            <summary>
            Identifies the SectionStrokes dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.InnerLabelPosition">
            <summary>
            Defines values that specify the position of the inner labels in a radar chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.InnerLabelPosition.Left">
            <summary>
            The label is aligned to the left.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.InnerLabelPosition.Center">
            <summary>
            The label is aligned to the center.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.InnerLabelPosition.Right">
            <summary>
            The label is aligned to the right.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.RadarSeries">
            <summary>
            Represents a series in a radar chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.RadarSeries.#ctor">
            <summary>
            Initializes a new instance of the RadarSeries class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.RadarStyle">
            <summary>
            Gets or sets the style of the radar series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.RadarStyleProperty">
            <summary>
            Identifies the RadarStyle dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.Data">
            <summary>
            Gets or sets the data for the radar series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.DataProperty">
            <summary>
            Identifies the Data dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.Angles">
            <summary>
            Gets or sets the angles for the radar series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.AnglesProperty">
            <summary>
            Identifies the Angles dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.DataPath">
            <summary>
            Gets or sets the path to the property in the DataSource used for retrieving data for the radar series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.DataPathProperty">
            <summary>
            Identifies the DataPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.ScatterType">
            <summary>
            Gets or sets the type of the scatter.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.ScatterTypeProperty">
            <summary>
            Identifies the ScatterType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.ScatterSize">
            <summary>
            Gets or sets the size of the scatter marks.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.ScatterSizeProperty">
            <summary>
            Identifies the ScatterSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.RadarScatterStrokeThickness">
            <summary>
            Gets or sets the thickness of the scatter stroke.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.RadarScatterStrokeThicknessProperty">
            <summary>
            Identifies the RadarScatterStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.Labels">
            <summary>
            Gets or sets the custom labels for the series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.LabelsProperty">
            <summary>
            Identifies the Labels dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.LabelPath">
            <summary>
            Gets or sets the path to the property in the DataSource used for retrieving custom labels for this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.LabelPathProperty">
            <summary>
            Identifies the LabelPath dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.LabelType">
            <summary>
            Gets or sets the type of labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.LabelTypeProperty">
            <summary>
            Identifies the LabelType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.LabelOffset">
            <summary>
            Gets or sets the offset of the labels.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.LabelOffsetProperty">
            <summary>
            Identifies the LabelOffset dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.RadarScatterStrokes">
            <summary>
            Gets the strokes of the scatter marks.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.RadarScatterStrokesSource">
            <summary>
            Gets or sets a strongly typed collection of brushes, which will be used
            as a source for the brushes used to fill the scatters in this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.RadarScatterStrokesSourceProperty">
            <summary>
            Identifies the RadarScatterStrokesSource dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.RadarScatterFills">
            <summary>
            Gets or sets the brushes used to fill scatters drawn at data points in this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.RadarScatterFillsProperty">
            <summary>
            Identifies the RadarScatterFills dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.RadarSeries.RadarScatterFillsSource">
            <summary>
            Gets or sets a strongly typed collection of brushes, which will be used
            as a source for the brushes used to fill the scatters in this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarSeries.RadarScatterFillsSourceProperty">
            <summary>
            Identifies the RadarScatterFillsSource dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.RadarType">
            <summary>
            Defines values that specify the type of the radar chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarType.Radar">
            <summary>
            The chart is radar.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarType.Polar">
            <summary>
            The chart is polar.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.RadarStyle">
            <summary>
            Defines values that specify how the radar graphic is drawn.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarStyle.Line">
            <summary>
            The radar graphic is built of lines.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarStyle.Arc">
            <summary>
            The radar graphic is built of arcs.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RadarStyle.Bezier">
            <summary>
            The radar graphic is built of bezier curves.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.RoundCornerType">
            <summary>
            Defines values that specify the type of rounded corners for the chart element.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RoundCornerType.Top">
            <summary>
            Only the top corners are drawn rounded.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RoundCornerType.Bottom">
            <summary>
            Only the bottom corners are drawn rounded.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RoundCornerType.All">
            <summary>
            All corners are drawn rounded.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.RoundCornerType.None">
            <summary>
            No corners are drawn rounded.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.Scatter">
            <summary>
            Represents scatter marks drawn at data points in line charts.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Scatter.#ctor">
            <summary>
            Initializes a new instance of the Scatter class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Scatter.CreateShape">
            <summary>
            Creates a Shape that represents this scatter element.
            </summary>
            <returns>A Shape object.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Scatter.ScatterSize">
            <summary>
            Gets the size of this scatter.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Scatter.ScatterType">
            <summary>
            Gets the type of this scatter.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Scatter.Center">
            <summary>
            Gets the center of this scatter.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Scatter.ScatterIndex">
            <summary>
            Gets the index in the series data array of the value represented by this scatter.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Scatter.SeriesIndex">
            <summary>
            Gets the index of the series in the series collection this scatter belongs to.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.Scatter.Point3D">
            <summary>
            Gets the position of the scatter if this is a 3D chart.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ScatterType">
            <summary>
            Specifies the types of scatter shapes supported by the control.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.Circle">
            <summary>
            The scatter is drawn in the shape of a circle.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.Cross">
            <summary>
            The scatter is drawn in the shape of a cross.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.Diamond">
            <summary>
            The scatter is drawn in the shape of a diamond.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.InvertedTriangle">
            <summary>
            The scatter is drawn in the shape of an inverted triangle.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.None">
            <summary>
            No scatter is drawn.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.Square">
            <summary>
            The scatter is drawn in the shape of a square.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.Star">
            <summary>
            The scatter is drawn in the shape of a star.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.HorStick">
            <summary>
            The scatter is drawn in the shape of a horizontal stick.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.Triangle">
            <summary>
            The scatter is drawn in the shape of a triangle.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.Plus">
            <summary>
            The scatter is drawn in the shape of a plus.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ScatterType.VertStick">
            <summary>
            The scatter is drawn in the shape of a vertical stick.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.SeriesLegend">
            <summary>
            Represents a legend with custom set labels and colors.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.SeriesLegend.OnLabelsSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the LabelsSourceChanged event.
            </summary>
            <param name="d">The object that reised the event.</param>
            <param name="e">DependencyPropertyChangedEventArgs that gives data for the event.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.SeriesLegend.OnBrushesSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the BrushesSourceChanged event.
            </summary>
            <param name="d">The sender of the event.</param>
            <param name="e">DependencyPropertyChangedEventArgs object that gives data for the event.</param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SeriesLegend.LabelsSource">
            <summary>
            Gets or sets the source of the labels that are used by this legend.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SeriesLegend.LabelsSourceProperty">
            <summary>
            Identifies the LabelsSource dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SeriesLegend.BrushesSource">
            <summary>
            Gets or sets the source of the brushes that are used by this legend.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SeriesLegend.BrushesSourceProperty">
            <summary>
            Identifies the BrushesSource dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ShapeElementType.Circle">
            <summary>
            The element has the shape of a circle.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ShapeElementType.Cross">
            <summary>
            The element has the shape of a cross.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ShapeElementType.Diamond">
            <summary>
            The element has the shape of a diamond.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ShapeElementType.HorLine">
            <summary>
            The element has the shape of a horizontal line.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ShapeElementType.InvertedTriangle">
            <summary>
            The element has the shape of an inverted triangle.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ShapeElementType.Square">
            <summary>
            The element has the shape of a square.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ShapeElementType.Star">
            <summary>
            The element has the shape of a star.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ShapeElementType.Triangle">
            <summary>
            The element has the shape of a triangle.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ShapeElementType.Plus">
            <summary>
            The element has the shape of a vertical plus.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ShapeElementType.VertLine">
            <summary>
            The element has the shape of a vertical line.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.StockPrice">
            <summary>
            Represents a data object, containing open, close, low and high values for a certain date.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.StockPrice.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the StockPrice class.
            </summary>
            <param name="open">The open value.</param>
            <param name="close">The close value.</param>
            <param name="low">The low value.</param>
            <param name="high">The high value.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.StockPrice.#ctor(System.Double,System.Double,System.Double,System.Double,System.DateTime)">
            <summary>
            Initializes a new instance of the StockPrice class.
            </summary>
            <param name="open">The open value.</param>
            <param name="close">The close value.</param>
            <param name="low">The low value.</param>
            <param name="high">The high value.</param>
            <param name="date">The corresponding date.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.StockPrice.#ctor">
            <summary>
            Initializes a new instance of the StockPrice class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.StockPrice.Open">
            <summary>
            Gets or sets the open value.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.StockPrice.Close">
            <summary>
            Gets or sets the close value.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.StockPrice.Low">
            <summary>
            Gets or sets the low value.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.StockPrice.High">
            <summary>
            Gets or sets the high value.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.StockPrice.Date">
            <summary>
            Gets or sets the date.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.SurfaceChart">
            <summary>
            Represents a 3D surface chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.SurfaceChart.#ctor">
            <summary>
            Initializes a new instance of the SurfaceChart class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.SurfaceChart.HitTest(System.Windows.Point)">
            <summary>
            AxesChart3D.HitTest override.
            </summary>
            <param name="p">The point to test.</param>
            <returns>An instance of the ChartHitTestResult3D class.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.SurfaceChart.OnApplyTemplate">
            <summary>
            Chart3D.OnApplyTemplate override.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.SurfaceChart.CalculateSpherePoints(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3DCollection,System.Windows.Media.Int32Collection,System.Windows.Media.PointCollection,System.Windows.Controls.Orientation,System.Double,System.Int32,System.Collections.Generic.Dictionary{System.Windows.Media.Media3D.Point3D,System.Int32})">
            <summary>
            Calculates the points of the sphere.
            </summary>
            <param name="position">The 3D position.</param>
            <param name="points">The points.</param>
            <param name="indices">The indices.</param>
            <param name="textures">The textures of the chart.</param>
            <param name="textureOrientation">The texture orientation.</param>
            <param name="radius">The raidus.</param>
            <param name="separators">The separators.</param>
            <param name="temp">A dictionary used by the calculations.</param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.SurfaceChart.CalculateSpherePoints2(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3DCollection,System.Windows.Media.Int32Collection,System.Windows.Media.PointCollection,System.Windows.Controls.Orientation,System.Double,System.Int32,System.Int32)">
            <summary>
            Calculates the points of the sphere.
            </summary>
            <param name="position">The position.</param>
            <param name="points">The points to calculate.</param>
            <param name="indices">The indices.</param>
            <param name="textures">The textures.</param>
            <param name="textureOrientation">The texture orientation.</param>
            <param name="radius">The radius.</param>
            <param name="separators">The separators.</param>
            <param name="count">The point count.</param>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.InterpolationType">
            <summary>
            Gets or sets how surface points are added around the data points of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.InterpolationTypeProperty">
            <summary>
            Identifies the InterpolationType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.InterpolationSensitivity">
            <summary>
            Gets or sets the sensitivity with which the chart 
            represents changes between adjacent data values.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.InterpolationSensitivityProperty">
            <summary>
            Identifies the InterpolationSensitivity dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.GroundLevel">
            <summary>
            Gets or sets the value that indicates the level of the ground in the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.GroundLevelProperty">
            <summary>
            Identifies the GroundLevel dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.ShowSurface">
            <summary>
            Show Surface.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.ShowSurfaceProperty">
            <summary>
            Identifies the ShowSurface dependency property.
            </summary>      
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.ShowScatters">
            <summary>
            Show Scatters.   
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.ShowScattersProperty">
            <summary>
            Identifies the ShowScatters dependency property.
            </summary>    
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.TextureType">
            <summary>
            Gets or sets the texture of the chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.TextureTypeProperty">
            <summary>
            Identifies the TextureType dependency property.
            </summary>   
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.ShowWireFrame">
            <summary>
            Gets or sets a value indicating whether the wire frame is drawn.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.ShowWireFrameProperty">
            <summary>
            Identifies the ShowWireFrame dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.ColorMapList">
            <summary>
            Gets or sets the colors of the color map.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.ColorMapListProperty">
            <summary>
            Identifies the ColorMapList dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.CloseModelFigure">
            <summary>
            Gets or sets a value indicating whether to add side walls to the model,
            which extend from the model surface down to the bottom of the plot area.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.CloseModelFigureProperty">
            <summary>
            Identifies the CloseModelFigure dependency property.
            </summary>       
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.WireFrameThickness">
            <summary>
            Gets or sets the thickness of the wireframe.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.WireFrameThicknessProperty">
            <summary>
            Identifies the WireFrameThickness dependency property.
            </summary>  
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.PointMergeThreshold">
            <summary>
            The threshold for merging points.        
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.PointMergeThresholdProperty">
            <summary>
            Identifies the PointMergeThreshold dependency property.
            </summary>  
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.ScatterFaceSize">
            <summary>
            Gets or sets the size of the faces that build the scatters of the 3D chart.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.ScatterFaceSizeProperty">
            <summary>
            Identifies the ScatterFaceSize dependency property.
            </summary>  
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.CustomModel">
            <summary>
            Draw custom model.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.CustomModelProperty">
            <summary>
            Identifies the CustomModel dependency property.
            </summary>  
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.CustomModelPositions">
            <summary>
            Custom model positions.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.CustomModelPositionsProperty">
            <summary>
            Identifies the CustomModelPositions dependency property.
            </summary>  
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.CustomModelTextureCoordinates">
            <summary>
            Custom model texture coordinates.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.CustomModelTextureCoordinatesProperty">
            <summary>
            Identifies the CustomModelTextureCoordinates dependency property.
            </summary>  
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceChart.CustomModelTriangleIndices">
            <summary>
            Custom model triangle indices.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceChart.CustomModelTriangleIndicesProperty">
            <summary>
            Identifies the CustomModelTriangleIndices dependency property.
            </summary>  
        </member>
        <member name="T:MindFusion.Charting.Wpf.SurfaceSeries">
            <summary>
            Represents a series in a surface chart.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.SurfaceSeries.#ctor(MindFusion.Charting.Wpf.Axis,MindFusion.Charting.Wpf.Axis)">
            <summary>
            Initializes a new instance of the SurfaceSeries class.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.SurfaceSeries.#ctor">
            <summary>
            Initializes a new instance of the SurfaceSeries class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceSeries.GroundLevelMargin">
            <summary>
            Gets or sets the offset of the ground level for this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceSeries.GroundLevelMarginProperty">
            <summary>
            Identifies the GroundLevelMargin dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceSeries.ClipMinimum">
            <summary>
            Gets or sets the minimum value to display for this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceSeries.ClipMinimumProperty">
            <summary>
            Identifies the ClipMinimum dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceSeries.ClipMaximum">
            <summary>
            Gets or sets the maximum value to display for this series.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceSeries.ClipMaximumProperty">
            <summary>
            Identifies the ClipMaximum dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceSeries.ScatterType">
            <summary>
            Gets or sets the type of the scatter marks of this series when displayed
            in a chart with SurfaceType set to Scatter. This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceSeries.ScatterTypeProperty">
            <summary>
            Identifies the ScatterType dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceSeries.ScatterSize">
            <summary>
            Gets or sets the size of the scatter marks of this series when displayed
            in a chart with SurfaceType set to Scatter. This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceSeries.ScatterSizeProperty">
            <summary>
            Identifies the ScatterSize dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceSeries.ShowScatterFlag">
            <summary>
            Gets or sets a value indicating whether to display projections from
            the scatter marks to the bottom of the plot area.
            This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceSeries.ShowScatterFlagProperty">
            <summary>
            Identifies the ShowScatterFlag dependency property.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.SurfaceSeries.TextureOrientation">
            <summary>
            Gets or sets the orientation of the texture applied to the elements
            representing this series. This is a dependency property.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceSeries.TextureOrientationProperty">
            <summary>
            Identifies the TextureOrientation dependency property.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.SurfaceType">
            <summary>
            Specifies the type of a surface chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceType.Surface">
            <summary>
            Indicates that the chart should display a surface.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceType.Scatter">
            <summary>
            Indicates that the chart should display scatter marks.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.SurfaceType.Both">
            <summary>
            Indicates that the chart should display both scatter and surface.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.TextureType">
            <summary>
            Specifies how to color a surface chart.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.TextureType.Brush">
            <summary>
            Indicates that the surface is colored using a brush.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.TextureType.GradientColorMap">
            <summary>
            Indicates that the surface is colored using a gradient color map.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.TextureType.ExactColorMap">
            <summary>
            Indicates that the surface is colored using an exact color map.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.TextureType.None">
            <summary>
            Indicates that the surface is invisible.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ToolTipType">
            <summary>
            Specifies the type of tooltips to display for the values in a chart series.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ToolTipType.Empty">
            <summary>
            Indicates no tooltips.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ToolTipType.ChartData">
            <summary>
            Indicates that the tooltips should display the associated value.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.ToolTipType.CustomText">
            <summary>
            Indicates that the tooltips are supplied by the user.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Utilities.CalculateBiggerRoundNumber(System.Double)">
            <summary>
            Calculates a bigger round number - the nearest to
            the minValue one. Used when calculating the start and
            end numbers of the axis.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Utilities.ComputeCartesianCoordinate(System.Double,System.Double,System.Double)">
            <summary>
            Converts a coordinate from the polar coordinate system to the cartesian coordinate system.
            </summary>
            <param name="angle"></param>
            <param name="radiusX"></param>
            /// <param name="radiusY"></param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Utilities.FormatDateTime(System.Double,System.String)">
            <summary>
            Formats a double value that represents OLE Automation date.
            </summary>
            <param name="representation">The double value that represents the 
            OLE Automation date.</param>
            <param name="format">The format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Utilities.ParseDateTimeValue(System.Object)">
            <summary>
            converts a DateTime object to a double value 
            that is its OLE Automation representation.
            </summary>
            <param name="data">The data to convert.</param>
            <returns>The OLE Automation representation of the given DateTime.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.Utilities.PolarToCartesian(System.Windows.Point,System.Double,System.Double,System.Double,System.Windows.Point@)">
            <summary>
            Converts polar coordinates to the corresponding
            Cartesian coordinates, using the specified point as
            a center of the coordinate system.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.XmlSerializationContext">
            <summary>
            Contains methods that can help you serialize and deserialize
            charts to and from XML documents.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.#ctor(MindFusion.Charting.Wpf.Chart,System.Int32,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the XmlSerializationContext class.
            </summary>
            <param name="chart">
            The Chart this class will operate on.
            </param>
            <param name="fileVersion">
            The file version of the file being deserialized.
            </param>
            <param name="document">
            The .NET XmlDocument to serialize/deserialize to/from.
            </param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.#ctor(MindFusion.Charting.Wpf.Chart,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the XmlSerializationContext class.
            </summary>
            <param name="chart">
            The Schedule this class will operate on.
            </param>
            <param name="document">
            The .NET XmlDocument to serialize/deserialize to/from.
            </param>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.AddChildElement(System.String,System.Xml.XmlElement)">
            <summary>
            Adds a new child node with the specified name to
            the specified parent node.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.AddChildElement(System.String,System.Xml.XmlNode)">
            <summary>
            Adds a new child node with the specified name to
            the specified parent node.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.AddChildElement(System.String,System.Xml.XmlElement,System.String)">
            <summary>
            Adds a new child node with the specified name and
            value to the specified parent node.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteString(System.String,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a string value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteBool(System.Boolean,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a boolean value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteChar(System.Char,System.String,System.Xml.XmlElement)">
            <summary>
            Write a char value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteDecimal(System.Decimal,System.String,System.Xml.XmlElement)">
            <summary>
            Write a decimal value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteByte(System.Byte,System.String,System.Xml.XmlElement)">
            <summary>
            Write a byte value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteSByte(System.SByte,System.String,System.Xml.XmlElement)">
            <summary>
            Write a 8-bit signed integer value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteInt(System.Int32,System.String,System.Xml.XmlElement)">
            <summary>
            Writes an integer value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteShort(System.Int16,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a short value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteLong(System.Int64,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a long value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteUInt(System.UInt32,System.String,System.Xml.XmlElement)">
            <summary>
            Writes an unsigned integer value with the specified name.
            </summary> 
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteUShort(System.UInt16,System.String,System.Xml.XmlElement)">
            <summary>
            Writes an unsigned short value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteULong(System.UInt64,System.String,System.Xml.XmlElement)">
            <summary>
            Writes an unsigned long value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteDouble(System.Double,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a double value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteSize(System.Windows.Size,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a Size with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteRectangle(System.Windows.Rect,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a Rect with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteThickness(System.Windows.Thickness,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a Thickness with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteEffect(System.Windows.Media.Effects.Effect,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified visual effect with the specified element name under the specified parent element.
            </summary>
            <param name="effect">The visual effect to write.</param>
            <param name="elementName">The name of the element for this effect.</param>
            <param name="parentElement">The parent element of this effect.</param>
            <returns></returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WritePoint(System.Windows.Point,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a Point with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.FromPoint(System.Windows.Point)">
            <summary>
            Converts the specified Point object to a string.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WritePointCollection(System.Windows.Media.PointCollection,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified PointCollection as a XML element.
            </summary>
            <param name="points">The PointCollection to write.</param>
            <param name="elementName">The name of the new XML element.</param>
            <param name="parentElement">The parent of the new XML element.</param>
            <returns>The new XML element.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteGradientStopCollection(System.Windows.Media.GradientStopCollection,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified GradientStopCollection.
            </summary>
            <param name="stops">The GradienSttop-s to write.</param>
            <param name="elementName">The name of the XML element that will be used for this GradientStop-s collection.</param>
            <param name="parentElement">The parent node of the XML element that will represent the GradientStop-s collection.</param>
            <returns>The new XML element.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteGradientStop(System.Windows.Media.GradientStop,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified GradientStop in XML.
            </summary>
            <param name="stop">The GradientStop to write.</param>
            <param name="elementName">The name of the XML element to write.</param>
            <param name="parentElement">The parent of the new XML element.</param>
            <returns>The new XML element.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteBrush(System.Windows.Media.Brush,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified brush as an XML element. The brush
            is registered within the internal hashtable for
            subsequent serialization.
            </summary>
            <param name="brush">The Brush to write.</param>
            <param name="elementName">The name of the new XML element.</param>
            <param name="parentElement">The parent of the new XML element.</param>
            <returns>The new XML element.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteBrushList(System.Collections.Generic.List{System.Windows.Media.Brush},System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified list of brushes as a XML element.
            </summary>
            <param name="brushes">The PointCollection to write.</param>
            <param name="elementName">The name of the new XML element.</param>
            <param name="parentElement">The parent of the new XML element.</param>
            <returns>The new XML element.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteBrushCollection(MindFusion.Charting.Wpf.BrushCollection,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified collection of brushes under the specified name with the 
            specified Xml parent.
            </summary>
            <param name="brushes">The collection to write.</param>
            <param name="elementName">The name of the new element.</param>
            <param name="parentElement">The parent of the new node.</param>
            <returns>The newly created element.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteColorArray(System.Windows.Media.Color[],System.String,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified array.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteDoubleArray(System.Double[],System.String,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified array.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteDoubleCollection(System.Windows.Media.DoubleCollection,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified DoubleCollection as a XML node with the specified name and with the specified parent element.
            </summary>
            <param name="array">The DoubleCollection to write.</param>
            <param name="elementName">The name of the new XML element.</param>
            <param name="parentElement">The parent of the new XML element.</param>
            <returns>The new XML element.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WritePen(System.Windows.Media.Pen,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified pen.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteFontFamily(System.Windows.Media.FontFamily,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a FontFamily object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteFontStyle(System.Object,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a FontStyle object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteFontWeight(System.Object,System.String,System.Xml.XmlElement)">
            <summary>
            Writes a FontWeight object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteEnum(System.Object,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified enum value.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteStream(System.IO.Stream,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified stream.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteColor(System.Windows.Media.Color,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified color.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteColor(System.Windows.Media.Brush,System.String,System.Xml.XmlElement)">
            <summary>
            WPF uses Brushes in many places instead of colors
            For compatability with older versions save the brush as color if possible
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.WriteObject(System.Object,System.String,System.Xml.XmlElement)">
            <summary>
            Writes the specified object under the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadString(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a string value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadString(System.String,System.Xml.XmlElement,System.String)">
            <summary>
            Reads a string value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadBool(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a boolean value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadBool(System.String,System.Xml.XmlElement,System.Boolean)">
            <summary>
            Reads a boolean value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadDecimal(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a decimal value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadByte(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a byte value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadSByte(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a 8-bit signed integer value with the specified name.
            </summary>        
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadChar(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a char value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadInt(System.String,System.Xml.XmlElement)">
            <summary>
            Reads an integer value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadInt(System.String,System.Xml.XmlElement,System.Int32)">
            <summary>
            Reads an integer value with the specified name.
            </summary>
            <param name="elementName">
            The name of the element containing the integer value.
            </param>
            <param name="parentElement">
            The parent element of the node with the specified name.
            </param>
            <param name="defaultValue">
            The value returned if the specified element is not found.
            </param>
            <value>
            An integer value. Returns defaultValue if there is no element with the specified name under 
            the specified parent.
            </value>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadShort(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a short value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadLong(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a long value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadUInt(System.String,System.Xml.XmlElement)">
            <summary>
            Reads an unsigned integer value with the specified name.
            </summary>     
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadUShort(System.String,System.Xml.XmlElement)">
            <summary>
            Reads an unsigned short value with the specified name.
            </summary>    
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadULong(System.String,System.Xml.XmlElement)">
            <summary>
            Reads an unsigned  long value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadFloat(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a double value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadFloat(System.String,System.Xml.XmlElement,System.Single)">
            <summary>
            Reads a double value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadDouble(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a double value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadSize(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a Size object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadEffect(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a visual Effect from the specified XML element 
            with the specified parent.
            </summary>
            <param name="elementName">The name of the element to read.</param>
            <param name="parentElement">The parent of the element.</param>
            <returns>The Effect that was read.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadBrushList(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a list of brushes from the specified element with the 
            specified parent.
            </summary>
            <param name="elementName">The name of the element.</param>
            <param name="parentElement">The parent of the element.</param>
            <returns>The list with the brushes that was read.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadBrushCollection(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a collection of brushes from the element with the specified
            name and the specified parent.
            </summary>
            <param name="elementName">The name of the element to read.</param>
            <param name="parentElement">The parent of the element.</param>
            <returns>The collection of the deserialized brushes.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadRectangle(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a rectangle from the specified node
            with the specified parent.
            </summary>
            <param name="elementName">The name of the element.</param>
            <param name="parentElement">The parent of the element.</param>
            <returns>The rectangle that was read.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadThickness(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a Thickness object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadPoint(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a Point object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadPoint(System.Xml.XmlElement)">
            <summary>
            Reads a PointF object from the specified element.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ToPoint(System.String)">
            <summary>
            Converts the specified string to a Point object.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadPointCollection(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a PointCollection object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadGradientStopCollection(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a GradientStopCollection from the specified 
            element with the specified parent.
            </summary>
            <param name="elementName">The name of the element.</param>
            <param name="parentElement">The parent of the element.</param>
            <returns>The GradientStopCollection that was read.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ToGradientStop(System.Xml.XmlElement)">
            <summary>
            Converts the specified string to a GradientStop object.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadBrush(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a Brush object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadColorArray(System.String,System.String,System.Xml.XmlElement)">
            <summary>
            Reads a color array with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadDoubleArray(System.String,System.String,System.Xml.XmlElement)">
            <summary>
            Reads a color array with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadDoubleCollection(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a DoubleCollection from the specified element 
            with the specified parent.
            </summary>
            <param name="elementName">The name of the element.</param>
            <param name="parentElement">The parent of the element.</param>
            <returns>The DoubleCollection that was read.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadPen(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a Pen object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadFontFamily(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a FontFamily object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadFontStyle(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a FontStyle object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadFontWeight(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a FontWeight object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadEnum(System.String,System.Xml.XmlElement)">
            <summary>
            Reads an enum value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadEnum(System.String,System.Xml.XmlElement,System.Object)">
            <summary>
            Reads an enum value with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadStream(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a stream with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadColor(System.String,System.Xml.XmlElement)">
            <summary>
            Reads a color with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.ReadObject(System.String,System.Xml.XmlElement)">
            <summary>
            Reads an object with the specified name.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.SelectNodes(System.Xml.XmlElement,System.String)">
            <summary>
            Returns the child nodes with the specified name.
            </summary>
            <param name="parentElement">The parent XML element.</param>
            <param name="name">A string specifying the name of the child nodes.</param>
            <returns>An XmlNodeList containing the found child nodes.</returns>
        </member>
        <member name="M:MindFusion.Charting.Wpf.XmlSerializationContext.SelectNode(System.Xml.XmlElement,System.String)">
            <summary>
            Returns the child node with the specified name.
            </summary>
            <param name="parentElement">The parent XML element.</param>
            <param name="name">A string specifying the name of the child node.</param>
            <returns>An XmlElement corresponding to the child node.</returns>
        </member>
        <member name="P:MindFusion.Charting.Wpf.XmlSerializationContext.XmlDocument">
            <summary>
            Gets the underlying XML document.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.XmlSerializationContext.FileVersion">
            <summary>
            Gets the format revision number for the file being currently serialized.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.XmlSerializationContext.BaseURI">
            <summary>
            Gets or sets the base URI of the XML document being loaded or saved.
            When not specified, the BaseURI of the underlying XmlDocument is used.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.XmlSerializationContext.InplaceResources">
            <summary>
            Gets or sets a value indicating whether resource accumulation is disabled.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.XmlSerializationContext.document">
            <summary>
            The underlying document.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.XmlSerializationContext.baseURI">
            <summary>
            The base URI of the XML document being loaded or saved.
            When not specified, the BaseURI of the underlying XmlDocument is used.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.XmlSerializationContext.LatestFormat">
            <summary>
            Specifies the latest file format revision number.
            </summary>
        </member>
        <member name="F:MindFusion.Charting.Wpf.XmlSerializationContext.inplaceResources">
            <summary>
            Specifies whether resource accumulation is disabled.
            </summary>
        </member>
        <member name="T:MindFusion.Charting.Wpf.ZoomChangedArgs">
            <summary>
            Provides arguments for ZoomChanged events.
            </summary>
        </member>
        <member name="M:MindFusion.Charting.Wpf.ZoomChangedArgs.#ctor">
            <summary>
            Initializes a new instance of the ZoomChangedArgs class.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ZoomChangedArgs.StartNum">
            <summary>
            The number, where zooming starts.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ZoomChangedArgs.StartNum2">
            <summary>
            Gets or sets the start number on the Y2-axis for the zoom.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ZoomChangedArgs.EndNum">
            <summary>
            Gets or sets the end number for the zoom.
            </summary>
        </member>
        <member name="P:MindFusion.Charting.Wpf.ZoomChangedArgs.EndNum2">
            <summary>
            Gets or sets the end number on the Y2-axis for the zoom.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
